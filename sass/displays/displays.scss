@import '../materialize/components/_color';
// Utility variables for Materialize colors.  map-get is annoying
//....put base last.  trust me
$blue-grey-lighten-1: map-get($blue-grey, lighten-1);
$blue-grey-lighten-2: map-get($blue-grey, lighten-2);
$blue-grey-lighten-3: map-get($blue-grey, lighten-3);
$blue-grey-lighten-4: map-get($blue-grey, lighten-4);
$blue-grey-lighten-5: map-get($blue-grey, lighten-5);
$blue-grey-darken-1: map-get($blue-grey, darken-1);
$blue-grey-darken-2: map-get($blue-grey, darken-2);
$blue-grey-darken-3: map-get($blue-grey, darken-3);
$blue-grey-darken-4: map-get($blue-grey, darken-4);
$blue-grey: map-get($blue-grey, base);

$grey-lighten-1: map-get($grey, lighten-1);
$grey-lighten-2: map-get($grey, lighten-2);
$grey-lighten-3: map-get($grey, lighten-3);
$grey-lighten-4: map-get($grey, lighten-4);
$grey-lighten-5: map-get($grey, lighten-5);
$grey-darken-1: map-get($grey, darken-1);
$grey-darken-2: map-get($grey, darken-2);
$grey-darken-3: map-get($grey, darken-3);
$grey-darken-4: map-get($grey, darken-4);
$grey: map-get($grey, base);

$green-lighten-1: map-get($green, lighten-1);
$green-lighten-2: map-get($green, lighten-2);
$green-lighten-3: map-get($green, lighten-3);
$green-lighten-4: map-get($green, lighten-4);
$green-lighten-5: map-get($green, lighten-5);
$green-darken-1: map-get($green, darken-1);
$green-darken-2: map-get($green, darken-2);
$green-darken-3: map-get($green, darken-3);
$green-darken-4: map-get($green, darken-4);
$green: map-get($green, base);

// common
.blue-grey-form {
    .input-field .prefix {
        color: #000;

        &.active {
            color: $blue-grey !important;
        }
    }

    input[type=range]::-webkit-slider-thumb {
        background-color: $blue-grey !important;
    }
    
    input[type=range]::-ms-thumb {
        background-color: $blue-grey !important;
    }

    input[type=range]::-moz-range-thumb {
        background-color: $blue-grey !important;
    }

    input[type=range] + .thumb {
        background-color: $blue-grey !important;
    }

    input[type=range] + .thumb .value {
        color: white;
    }

    input:not([type]):focus:not([readonly]) + label,
    input[type=text]:focus:not([readonly]) + label,
    input[type=password]:focus:not([readonly]) + label,
    input[type=email]:focus:not([readonly]) + label,
    input[type=url]:focus:not([readonly]) + label,
    input[type=time]:focus:not([readonly]) + label,
    input[type=date]:focus:not([readonly]) + label,
    input[type=datetime]:focus:not([readonly]) + label,
    input[type=datetime-local]:focus:not([readonly]) + label,
    input[type=tel]:focus:not([readonly]) + label,
    input[type=number]:focus:not([readonly]) + label,
    input[type=search]:focus:not([readonly]) + label,
    textarea.materialize-textarea:focus:not([readonly]) + label {
        color: $blue-grey;
    }

    input:not([type]):focus:not([readonly]),
    input[type=text]:focus:not([readonly]),
    input[type=password]:focus:not([readonly]),
    input[type=email]:focus:not([readonly]),
    input[type=url]:focus:not([readonly]),
    input[type=time]:focus:not([readonly]),
    input[type=date]:focus:not([readonly]),
    input[type=datetime]:focus:not([readonly]),
    input[type=datetime-local]:focus:not([readonly]),
    input[type=tel]:focus:not([readonly]),
    input[type=number]:focus:not([readonly]),
    input[type=search]:focus:not([readonly]),
    textarea.materialize-textarea:focus:not([readonly]) {
        border-bottom-color: $blue-grey;
        box-shadow: 0 1px 0 0 $blue-grey;
    }

    .switch label input[type=checkbox]:checked + .lever,
    .switch label input[type=checkbox]:checked + .lever:after {
        background-color: $blue-grey !important;
    }

    [type="radio"]:not(:checked) + label::before,
    [type="radio"]:not(:checked) + label::after,
    [type="checkbox"].filled-in:not(:checked) + label::after {
        border-color: $blue-grey !important;
    }

    [type="radio"]:checked + label::before,
    [type="radio"]:checked + label::after {
        border-color: $blue-grey !important;
        background-color: $blue-grey !important;
    }

    [type="checkbox"]:checked:not(.filled-in) + label::before {
        border-right-color: $blue-grey !important;
        border-bottom-color: $blue-grey !important;
    }

    [type="checkbox"]:indeterminate + label:before {
      border-right-color: $blue-grey !important;
    }

    [type="checkbox"].filled-in:checked + label::after {
        background-color: $blue-grey !important;
        border-color: $blue-grey !important;
    }

    [type="checkbox"].filled-in:not(:checked) + label::after {
        border-color: $blue-grey !important;
    }

    .dropdown-content li > a, 
    .dropdown-content li > span {
        color: $blue-grey !important;
    }

    .tabs {
        li {
            a {
                color: $blue-grey;
                position: relative;

                &:hover {
                   color: $blue-grey-lighten-4;
                }

                &::after {
                    content: '';
                    display: block;
                    position: absolute;
                    left: 50%;
                    right: 50%;
                    bottom: 0;
                    height: 2px;
                    background-color: $blue-grey;
                    transition: all ease 150ms;
                }

                &.active::after {
                    left: 0;
                    right: 0;
                }
            }
        }

        .indicator {
            display: none;
            background-color: $blue-grey;
        }
    }
}

.blue-grey-form-disabled {
    .switch label input[type=checkbox]:checked + .lever {
        background-color: $blue-grey-lighten-3 !important;
    }

    .switch label {
        cursor: default;
    }
}

.blue-grey-btn {
    background-color: $blue-grey;

    &:hover {
        background-color: $blue-grey-lighten-1;
    }
}

.container.small {
    height: 24px;
    line-height: 24px;
}

.dropdownLink {
    display: flex;
    align-items: center;
    padding: 10px 0;
    border-bottom: 1px solid #ccc;
    height: 3em;
    position: relative;

    &:hover {
        background-color: #eee;
    }

    i {
        position: absolute;
        right: 0;
    }
}

.dtiDropdown {
    position: fixed;
    display: none;
    overflow: hidden;
    background: #FFF;
    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
    will-change: width, height, top, left, opacity;
    transition: all 200ms ease;
    z-index: 1;

    ul {
        margin: 0;
        width: 100%;
        padding: 5px 0;
    }

    li {
        padding: 5px 10px;
        height: 2.5rem;
        display: flex;
        align-items: center;
        // min-width: 100px;
        // color: $blue-grey;
        cursor: pointer;
        // width: auto;

        &:hover {
            background-color: #eee;
        }
    }
}
// end common


$transitionDuration: 150ms;

body {
    height: 100vh;
    overflow: hidden;
    user-select: none;
}

main {
    position: relative;
    transition: margin-left $transitionDuration;
    overflow: hidden;
    width: 100%;
    height: 100%;
    // left: 50%;
    // transform: translateX(-50%);
    // margin: 0 auto;
    // overflow: auto;
}

.displayContainer {
    position: absolute;
    transform-origin: 0 0;

    // left: 50%;
    // transform: translateX(-50%);
}

.editMode.transition .displayContainer {
    transition: left $transitionDuration;
}

.bg {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    background-repeat: no-repeat;
    pointer-events: none;
}

.bottom-bar {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 10;
    height: 24px;
    background-color: rgba(0, 0, 0, .5);
    // background-color: $blue-grey-darken-3;

    .left-controls {
        padding-left: 10px;
    }
    
    .right-controls {
        position: absolute;
        right: 15px;
    }

    .autoZoom {
        cursor: pointer;
        float: left;
        margin-right: 5px;
    }

    .barBtn {
        margin: 0 5px;
        padding: 0 12px;
        border-radius: 2px;
        // background-color: $blue-grey;
        top: 1px;
        height: 20px;
        line-height: 20px;
        font-size: 0.9em;
        // height: calc(100% - 2px);
        // position: absolute;

        &.transparent {
            background-color: none !important;
        }
    }

    .zoom {
        position: relative;
        margin-right: 10px;
        top: 2px;
    }
}

.btn-small {
    height: 24px;
    line-height: 24px;
    padding: 0 0.5rem;
}

.btn-green  {
    background-color: $green;

    &:hover {
        background-color: lighten($green, 5%) !important;
    }
}

.btn-blue-grey:not(.btn-flat) {
    background-color: $blue-grey;

    &:hover {
        background-color: lighten($blue-grey, 5%) !important;
    }
}

.bottom-bar .range-field,
.widgetOptions .range-field {
    width: 75px;
    margin-right: 10px;
    // bottom: 15px;

    input[type=range] {
        margin: 0;
        width: 75px;
    }

    .thumb {
        z-index: 10;
    }
}

.range-row {
    input[type=range] {
        width: 70%;
    }

    input[type=number] {
        margin-left: 10%;
        width: 20%;
    }
}


/* COMMON */
.flex {
    display: flex;
}

.flex-row {
    flex-direction: row;
}

.flex-column {
    flex-direction: column;
}

.flex-right {
    justify-content: flex-end;
}

.flex-center {
    align-items: center;
}

.flex-around {
    justify-content: space-around;
}

.flex-even {
    justify-content: space-between;
}

.flex-stretch {
    align-items: stretch;
}

.flex-break {
    flex-basis: 100%;
    height: 0;
}
/* COMMON */

/* FONTS FOR MATERIALIZE */
@font-face {
    font-family: 'Material Icons';
    font-style: normal;
    font-weight: 400;
    src: local('Material Icons'), local('MaterialIcons-Regular'), url(../../font/Material-Icons/Material-Icons.woff2) format('woff2'), url(../../font/Material-Icons/Material-Icons.woff) format('woff');
}

.material-icons {
    font-family: 'Material Icons';
    font-weight: normal;
    font-style: normal;
    font-size: 24px;
    line-height: 1;
    letter-spacing: normal;
    text-transform: none;
    display: inline-block;
    white-space: nowrap;
    word-wrap: normal;
    direction: ltr;
    font-feature-settings: 'liga';
    -webkit-font-feature-settings: 'liga';
    -webkit-font-smoothing: antialiased;
}
/* END FONTS FOR MATERIALIZE */

$widgetShadow: 0 0 18px 5px rgba(0, 0, 0, .5);

.clone {
    transition: initial !important;
}

.dti-widget {
    position: absolute;
    font-family: roboto;
    cursor: pointer;
    
    right: auto;
    bottom: auto;
    transform-origin: top left;
    will-change: left, top, height, width;

    .dti-widget-content {
        font-family: roboto;
    }

    .ui-resizable-handle {
        visibility: hidden;
    }

    & > * {
        display: table-row;
        will-change: line-height, font-size;
    }

    // &:not(.editingWidget):hover {
    //     z-index: 100;
    //     box-shadow: $widgetShadow;
    // }
}

.dti-widget-text {
    white-space: pre-wrap;
}

.dti-widget-button {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    text-align: center;
    font-size: 10px;
    // line-height: 11px;
    // margin: 1px;
    background-color: $grey-lighten-1;
    // color: black !important;
    // border: 1px solid #909090;
    border-radius: 1px;
    border: thin groove $grey-lighten-1;

    & > span {
        margin-left: auto;
        margin-right: auto;
        white-space: pre;
    }

    &.transparent {
        border: none;
    }

    // &:hover {
    //     background-color: #b0bec5 !important;
    // }
}

.dti-widget-edit {
    position: absolute;
    top: -2px;
    left: -17px;
    font-size: 1.2em;
    color: #151515;
}

.dti-widget-animation {
    // display: table;
    width: 100%;
    height: 100%;
    display: inline-block;
    color: #000000;

    span {
        display: none;
    }

    img {
        // display: table-row;
        width: 100%;
        // height: 100%;
    }

    &.loaded img {
        height: 100%;
    }
}

.widgetPreview .dti-widget-animation {
    display: table-row;

    span {
        display: inline-block;
    }

    img {
        display: none;
        height: initial;
    }
}

.desktop {
    width: 100vw;
    height: 100vh;
}

$toolbarWidth: 150px;

.editMode {

    main:not(.desktop) {
        margin-left: $toolbarWidth;
    }

    .ui-resizable-handle {
        visibility: visible;
    }

    // .dti-widget {
    //     .hoverable:hover {
    //         box-shadow: 0 0 18px 5px rgba(0, 0, 0, .5);
    //     }
    // }

    .activeWidget {
        box-shadow: 0 0 18px 5px rgba(0, 0, 0, .5);   
    }

    .side-nav.fixed {
        transform: translateX(0%);
    }
}

#sidenav-overlay {
    display: none;
}

main .side-nav.fixed {
    transform: translateX(-100%);
}

.editMode #widgetToolbar {
    left: 0;
}

$displaySettingsWidth: 250px;

#displaySettings {
    position: absolute;
    // top: 50%;
    left: -1 * $displaySettingsWidth;
    width: $displaySettingsWidth;
    background-color: #fff;
    border-top-right-radius: 1px;
    border-bottom-right-radius: 1px;

    transition: all $transitionDuration;

    &.showPanel {
        left: 0;
    }

    .dimensions {
        display: flex;
        justify-content: space-around;

        input {
            // margin: 0;
        }
    }

    .displayBackground {
        .sp-replacer {
            width: 100%;
            margin-left: 30%;
            margin-bottom: 10px;
        }

        .sp-preview {
            width: 30%;
        }
    }

    .input-field {
        width: 40%;
        display: inline-block;

        label {
            left: 0;
        }
    }

    .file-field {
        width: 100%;
    }

    .file-field .btn {
        height: 28px;
        line-height: 28px;
        width: 90%;
        margin-left: 5%;
        padding: 0;
        text-transform: none;

        input {
            height: 28px;
        }
    }

    .file-path-wrapper {
        height: 28px;
        display: inline-block;
        width: 100%;

        .file-path {
            height: 28px;
            line-height: 28px;
        }
    }
}

#widgetToolbar {
    position: absolute;
    left: -1 * $toolbarWidth;
    width: $toolbarWidth;
    height: auto;
    top: 25%;
    background-color: #fff;
    transition: all $transitionDuration;
    border-top-right-radius: 1px;
    border-bottom-right-radius: 1px;
    padding-bottom: 0;
    
    li {
        position: relative;
        width: 100%;
        margin-bottom: 0;
        font-size: 16px;
        border-bottom: 1px solid #ccc;

        // i {
        //     margin-right: 16px;
        // }

        // i.inlineIcon {
        //     margin-right: 0;
        // }

        label {
            color: rgba(#000, 0.87);
        }
    }

    

    .widgetMode {
        margin-bottom: 15px;
    }

    .widgetOptions {
        padding: 0 25px;

        & > :not(:last-child) {
            margin-right: 5px;
        }
    }
}

.displaySettings a {
    padding: 10px 5px;

    &:hover {
        background-color: #ccc !important;
    }
}

.widgetPreview {
    // position: absolute;
    z-index: 1;
    // right: 0;
    // top: 24px;
    height: 48px;//100%;
    // transform: translateY(-50%);
    // width: 75px;
    text-align: center;

    .dti-widget {
        // cursor: move;
        display: table;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    // .dti-widget-content {
    //     // height: 24px;
    //     // line-height: 24px;
    //     cursor: move !important;
    // }

    a {
        line-height: 1.5;
    }

    .dti-widget-button {
        height: 24px;
        line-height: 24px;
        font-size: .9em;
        padding: 0 !important;

        span {
            pointer-events: none;
        }

    }
}

body > .menuContainer {
    display: none;
}

.fixed-action-btn.reversed {
    right: initial;
    bottom: initial;
    padding-bottom: 15px;
    margin-top: 0;
    z-index: 998;

    padding-top: 0;
    margin-top: 0;

    &.active ul {
        visibility: visible;
    }

    ul {
        left: 0;
        right: 0;
        text-align: center;
        position: absolute;
        top: 64px;
        margin: 0;
        visibility: hidden;

        li {
            margin-top: 15px;
        }

        a.btn-floating {
            opacity: 0;
        }
    }
}

.modal-bordered {
    border: 3px solid $blue-grey;
}

.modal-sm {
    width: 40%;
    overflow: visible;
}

.editingWidget {
    z-index: 5000;
    // background-color: #fff;
    box-shadow: $widgetShadow;
}

#mask,
.widgetToolbarMask {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    // pointer-events: none;
    opacity: 0;
    transition: all .3s;
    z-index: 1000;
    background-color: #000;
}

.editingPreviewWidget #widgetToolbar {
    z-index: 1000;
}


// multi select styling
.selectionBox {
    position: absolute;
    border: 1px dashed #ccc;
}
.selectedWidget {
    outline: 1px dashed #ccc;
    // box-shadow: $widgetShadow;
}


// pickadate overrides
.picker {
    // gets it above qtip's default 15000
    z-index: 16000 !important;
}

.picker__today,
.picker__close {
    color: $blue-grey !important;
}

.picker__day--selected, 
.picker__day--selected:hover, 
.picker--focused .picker__day--selected,
.picker__date-display {
    background-color: $blue-grey !important;
}

.picker__weekday-display {
    background-color: $blue-grey-darken-2 !important;
}

.endDate {
    margin-bottom: 15px;
}

.clockpicker-plate {
    background-color: $blue-grey-lighten-5 !important;
}

.clockpicker-display {
    color: white;
}

.clockpicker-span-hours,
.clockpicker-span-minutes,
.clockpicker-span-am-pm {
    color: white;
}

.clockpicker-canvas line {
    stroke: $blue-grey !important;
}

.clockpicker-canvas-fg,
.clockpicker-canvas-bg,
.clockpicker-canvas-bearing {
    fill: $blue-grey-lighten-3 !important;
}

.clockpicker-tick.active, 
.clockpicker-tick:hover {
    background-color: $blue-grey-lighten-4 !important;
}

.clockpicker-am-pm-block .active {
    background-color: $blue-grey-lighten-3 !important;
}

.intervalRanges {
    // padding-top: 20px;
}

.dateRanges .col:first-child,
.timeRanges .col:first-child,
.intervalRanges .col:first-child {
    padding-left: 0 !important;
}

.dateRanges .col:last-child,
.timeRanges .col:last-child,
.intervalRanges .col:last-child {
    padding-right: 0 !important;
}

.qtip {
    max-width: 100vw !important;
}

.qtip-content {
    overflow: visible !important;
    padding: 0 !important;
}

$tooltipMenuWidthLarge: 550px;

body.editingComplexWidget .qtip {
    width: $tooltipMenuWidthLarge !important;
}

.widgetTooltip {
    font-size: 16px;
    line-height: 16px;
    // padding-top: 10px;

    .input-field {
        // margin-top: .5rem;
    }

    input[type="number"] {
        width: 75px;
    }

    .animationTypeSelection {
        label {
            padding-left: 25px;
            margin-right: 15px;
        }
    }

    .file-field {
        margin-bottom: 15px;
        cursor: pointer;
    }

    .file-field .btn {
        height: 1.75em;
        line-height: 1.75em;
    }

    .file-path {
        height: 1.75em;
        line-height: 1.75em;
    }

    .widgetType {
        font-weight: bold;
    }

    .row .col {
        padding: 0 .35rem;
    }

    .input-field.col label {
        left: .35rem;
    }

    .pointLinks .btn-small {
        padding-right: .3rem;

        &:not(:first-child) {
            padding-left: 0;
        }
    }

    .removePoint {
        color: red;
    }

    .changePoint,
    .pointLink {
        color: #333;
    }

    .pointLink {
        width: calc(100% - 70px);
        font-size: 14px;
        text-align: left;
    }

    .pointLink:hover {
        text-decoration: underline;
    }

    .row {
        margin-bottom: 10px;
    }

    input[type=text],
    input[type=number],
    textarea {
        margin-bottom: 0;
    }

    textarea {
        // transition: none;
        min-height: initial;
        padding-bottom: 1rem;
        font-size: 16px;
        line-height: 16px;
    }

    .tooltipFooter {
        // padding-top: 10px;
    }

    .simple {
        padding-top: 2px !important;
    }

    .complex {
        padding-top: 10px !important;
        padding-left: 10px !important;
        // border-left: 1px solid #ccc;
    }

    .confirmReportRange {
        margin-bottom: 10px;
    }
}

// .intervalValue {
//     max-width: 20%;
//     margin-right: 15px !important;
// }

//spectrum styling
.sp-replacer {
    // float: right;
    border: none;
    padding: 0;
    background-color: initial;
    // padding-right: 2px;
}   

.sp-preview {
    height: 20px;
    width: 40px;
    border: none;
}

.context-menu-list {
    // z-index just above material tooltip (2000)
    z-index: 2001 !important;
    min-width: 5em;
}

.context-menu-item {
    color: $blue-grey !important;

    &::before {
        color: $blue-grey !important;
    }

    &.context-menu-hover {
        background-color: $blue-grey !important;
        color: #fff !important;

        &::before {
            color: #fff !important;
        }
    }
}

