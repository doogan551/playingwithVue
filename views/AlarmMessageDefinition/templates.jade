script#tmplSysHeader(type='text/html')
    div(style='background-color:#fff')
script#tmplGridRow(type='text/html')
    div(data-bind='foreach: $grid.visibleColumns,css:{"ui-widget-content":$grid.jqueryUITheme}')
        div(data-bind="kgCell: $data,style:{overflow:'visible'},attr:{class:cellClass() +'kgCell col'+$index() + ' '}")
script#tmplTextColor(type='text/html')
    div.swatch(data-bind='attr:{"class":"kgCellText colt"+$index(),"style":"background-color:#"+$parent.getProperty("msgTextColor")}')
        span(data-bind='text: $parent.getProperty("msgTextColor")')
script#tmplBackColor(type='text/html')
    div.swatch(data-bind='attr:{"class":"kgCellText colt"+$index(),"style":"background-color:#"+$parent.getProperty("msgBackColor")}')
            span.swatchColor(data-bind='text: $parent.entity[$data.field]')

script#tmplIsSystemMessage(type='text/html')
    div(data-bind='attr:{"class":"kgCellText colt"+$index()},style:{backgroundColor:"#fff"}', style="width:100%; height:100%;")
        .btn-group(data-bind='visible:$parent.getProperty("deletable")')
          button.btn.btn-xs(type='button',data-toggle='modal',data-target='#windowConfirmModal',data-bind='click:function(){ $parent.$userViewModel.setDeletable($parent.entity); }')
            span.fa.fa-trash-o
        .btn-group(data-bind='visible:$parent.getProperty("cloneable")')
          button.btn.btn-xs(type='button',data-bind='click:function() { $parent.$userViewModel.clone($parent.entity);}')
              span.fa.fa-clipboard

script#tmplSystemMessage(type='text/html')
  div(data-bind='attr:{"class":"kgCellText colt"+$index()}, text:$parent.getProperty("isSystemMessage"),click:function() {  $parent.$userViewModel.setEditor($parent.entity); }')

script#tmplGridFooter(type='text/html')
    div test

script#tmplGridMsgName(type='text/html')
    div(data-bind='attr:{"class":"kgCellText colt"+$index()}, click:function() {  $parent.$userViewModel.setEditor($parent.entity); }, text:$parent.entity[$data.field]', style="width:100%; height:100%;")

script#tmplGridMsgType(type='text/html')
    div(data-bind='attr:{"class":"kgCellText colt"+$index()},click:function() {  $parent.$userViewModel.setEditor($parent.entity); },text:$parent.entity[$data.field]')
script#tmplGridMsgCat(type='text/html')
    div(data-bind='attr:{"class":"kgCellText colt"+$index()},text:$parent.entity[$data.field],click:function() {  $parent.$userViewModel.setEditor($parent.entity); }')

// Message column in table
script#tmplGridMsgFormat(type='text/html')
    div(data-bind='attr:{"class":"kgCellText colt"+$index(), "style":"color:#"+$parent.getProperty("msgTextColor")+"; background-color:#"+$parent.getProperty("msgBackColor")}, text:$parent.entity[$data.field], click:function() {  $parent.$userViewModel.setEditor($parent.entity); }')

script#tmplTrashCanBtn(type='text/html')
    span.fa.fa-trash-o
script#tmplQuestionBtn(type='text/html')
    span.btn-danger.fa.fa-question

script#tmplEditor(type='text/html')
        .grid-blur
        #editor(data-bind='with:editor.viewModel',data-states='{"editing":"3","dirty":"3","data":"2","confirm":"3","data":"2","invalid":"2","ready":"0"}')
            .panel.panel-default
                .panel-heading
                    // ko if: $parent.beginEdit().template() !== "newMessage"
                    h3 Edit Alarm Message
                    // /ko

                    // ko if: $parent.beginEdit().template() === "newMessage"
                    h3 New Alarm Message (from existing)
                    // /ko

                .panel-body.form(role='form', style='position: relative;')
                        fieldset
                            .form-group(data-bind='')
                                label Name
                                input#msgName(data-bind='value: editable.msgName,valueUpdate:"keyup"',type='text')
                            .form-group
                                // ko if: isSystemMessage !== "Yes"
                                label Alarm Message
                                input#msgFormat(type='text', data-bind="value:editable.msgFormat, valueUpdate:'keyup', event:{keyup:$parent.checkMsgFormat}, style:{'background-color':'#'+editable.msgBackColor(),'color':'#'+editable.msgTextColor()}")
                                // /ko
                                
                                // ko if: isSystemMessage === "Yes"
                                label Alarm Message (Read-Only)
                                div#msgFormat(data-bind="text:msgFormat, style:{'background-color':'#'+editable.msgBackColor(),'color':'#'+editable.msgTextColor()}")
                                // /ko

                                .value-token
                                    h4 Alarm Message Tokens
                                    table(data-bind='foreach: $parent.tokenizer.valueTokens')
                                        tr
                                            td(data-bind="text: $data", style="padding-right:10px;")
                                            td
                                                // ko if: $data !== ""
                                                |(
                                                span(data-bind="text: $root.alarmMessagesViewModel.tokenDescriptions[$data]")
                                                |)
                                                // /ko

                            .form-group
                                label Message Text Color
                                div
                                    div(data-usedropdown="true", data-insertpalette="true", data-bind="diColorpicker: editable.msgTextColor")
                            .form-group
                                label Message Background Color
                                div
                                    div(data-usedropdown="true", data-insertpalette="true", data-bind="diColorpicker: editable.msgBackColor")

                .panel-footer(data-bind='with:$parent.handlers')
                    //button#saveEdit.btn.btn-primary(data-bind='enable:saveable, inlineConfirm: ["Save","I want to save these changes","Please Wait"],submitFunction:save')
                    button#saveEdit.btn.btn-primary(data-bind='enable: saveable, click: save') Save
                    button#cancelEdit.btn.btn-default(data-bind='click: cancel', style='margin-left:5px;') Cancel
                    .pull-right
                        // button#undoEdit.btn.btn-primary(data-bind='enable:hasChanges,inlineConfirm:["Undo","I want to undo my changes","Please Wait"],submitFunction:undo')
                    //.row
                        .col-md-4
                            span.fa.fa-edit(data-bind='visible:hasChanges()')
                            span.fa.fa-warning(data-bind='visible:!isValid()')
                            span.fa.fa-check(data-bind='visible:saveable()')
