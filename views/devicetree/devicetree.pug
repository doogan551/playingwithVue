doctype html
html
  head
    title
      | Infoscan by Dorsett Technologies
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    link(rel='stylesheet', href='/css/lib/bootstrap.3.0.2.min.css')
    link(rel='stylesheet', href='/css/lib/font-awesome-4.3.0/css/font-awesome.min.css')
    link(rel='stylesheet', href='/css/lib/treeview.css')
    link(rel='stylesheet', href='/css/devicetree/style.css')

  body
    .container(style='margin-top:30px;')
    .row
      .col-sm-10
        div.exapandAll(data-bind="click:$root.exapandAll")
          i.fa.fa-plus-circle.fa-2x
        div.collapseAll(data-bind="click:$root.collapseAll")
          i.fa.fa-minus-circle.fa-2x
        .searchArea
          input.form-control.searchInput(data-bind="event:{change:deviceSearch}, textInput: searchValue", placeholder="Search")
          i.fa.fa-times-circle.fa-1x.clearSearch(data-bind="click:$root.clearSearch")
        div.searchNext.noselect(data-bind="click:$root.searchNext")
          i.fa.fa-chevron-circle-down.fa-2x
        div.searchPrev.noselect(data-bind="click:$root.searchPrev")
          i.fa.fa-chevron-circle-up.fa-2x
        div.refreshIcon.noselect(data-bind="click:$root.refresh")
          i.fa.fa-refresh.fa-2x
        .treePane.well.well-sm
          i.fa.fa-circle-o-notch.fa-4x.fa-spin.loadingIcon
          ul#tree2(data-bind="foreach: tree()")
            li
              span.searchable(data-bind="text:networkSegment, css:{badNetwork: $root.badNetworks().indexOf(networkSegment()) > -1}, attr:{'id':networkSegment}")
              ul(data-bind="template:{name:'branchTemplate', foreach:branches()}")
        
      .col-sm-2
        .networksPane.well.well-sm
          // ko if: badNetworks().length > 0
          .badNetwork
            span Duplicate Networks:
            div(data-bind="foreach: badNetworks")
              div
                span.badNetwork.hoverCursor(data-bind="text:$data, click:$root.networkSearch")
          p
          // /ko
          span Networks:
          div(data-bind="foreach: networks")
            div.networks
              span.hoverCursor(data-bind="text:$data, click:$root.networkSearch")

    .overlay.well.well-lg
      .devicePane.form-horizontal
        .form-group
          label.col-sm-4 Name&nbsp;
          .col-sm-8
            input.form-control(data-bind="value:name" readonly)
        .form-group
          label.col-sm-4 Network&nbsp;
          .col-sm-8
            input.form-control(data-bind="value:network" readonly)
        .form-group
          label.col-sm-4 Uplink Port&nbsp;
          .col-sm-8
            input.form-control(data-bind="value:netType" readonly)
        .form-group
          label.col-sm-4 Device Address&nbsp;
          .col-sm-8
            input.form-control(data-bind="value:deviceAddress" readonly)
        .form-group
          label.col-sm-4 Device Status&nbsp;
          .col-sm-8
            input.form-control.deviceStatus(data-bind="value:deviceStatus" readonly)
        .form-group
          label.col-sm-4 Last Report Time&nbsp;
          .col-sm-8
            input.form-control(data-bind="value:lastReportTime" readonly)
        .form-group
          label.col-sm-4 Model Type&nbsp;
          .col-sm-8
            input.form-control(data-bind="value:modelType" readonly)
        .form-group
          label.col-sm-4 Firmware Revision&nbsp;
          .col-sm-8
            input.form-control(data-bind="value:firmwareRevision" readonly)

    script(id="branchTemplate" type="text/html")
        // ko if: ($parent.networkSegment && $parent.networkSegment() == networkSegment()) || ($data.networkSegment && $data.networkSegment() == $parent)
        li
          i.fa.fa-building.noselect(data-bind="style:{color:$root.statusColor($data)}") &nbsp;
          span.searchable.hoverCursor.noselect(data-bind="text:$data.text(), click:$root.openDevice, event:{mouseover:$root.showDevice, mouseout:$root.hideDevice}, attr:{'id':$data.text().split(' ').join('_')}")
          span.inlineDevAddr(data-bind="text:$root.devAddress($data)")
          //ko if:networks().length >0
          ul(data-bind="foreach: networks()")
            li
              span.searchable(data-bind="text:$data, css:{badNetwork: $root.badNetworks().indexOf($data) > -1}, attr:{'id':$data}")
              // ko if:$parent.branches().length >0
              ul(data-bind="template:{name:'branchTemplate', foreach:$parent.branches()}")
              // /ko
          // /ko
        // /ko
          

    script(type='text/javascript', src='/js/lib/jquery-1.9.1.min.js')
    script(type='text/javascript', src='/js/lib/lodash.min.js')
    script(type='text/javascript', src='/js/lib/bootstrap3.min.js')
    script(type='text/javascript', src='/js/lib/bootstrap3-hover-dropdown.min.js')
    script(type='text/javascript', src="/js/lib/knockout-3.2.0.js")
    script(type='text/javascript', src="/js/lib/knockout.viewModel.js")
    script(type='text/javascript', src="/js/lib/moment.js")
    script(type='text/javascript', src="/js/v2/dorsettUtility.js")
    script(type='text/javascript', src="/js/lib/treeview.js")
    script(type='text/javascript', src="/js/devicetree/devicetree.js")
