doctype html
html(lang="en")
    head
        meta(charset="utf-8")
        meta(http-equiv="X-UA-Compatible", content="IE=edge")
        link(href="/css/lib/bootstrap-3.3.6/bootstrap.min.css", rel="stylesheet")
        link(href="/css/lib/bootstrap-switch.min.css", rel="stylesheet")
        link(href="/css/lib/font-awesome-4.1.0/css/font-awesome.min.css", rel="stylesheet")
        link(href="/css/pointInspector/style.css", rel="stylesheet")
        link(href="/css/lib/bannerJS/style.css", rel="stylesheet")
        link(href="/css/lib/codeMirror/codemirror.css", rel="stylesheet")
        link(href="/css/lib/codeMirror/mdn-like.css", rel="stylesheet")
        link(href="/css/lib/codeMirror/dialog.css", rel="stylesheet")
        link(href="/css/lib/bootstrap-datetimepicker.min.css", rel="stylesheet")
        link(rel='stylesheet', href='/sass/components/pointSelector')

        script(src='/js/lib/store2.min.js')
        script(type='text/javascript', src='/js/lib/jquery-1.9.1.js')
        script(type='text/javascript', src='/js/v2/dti.js')
        script(type='text/javascript', src='/js/v2/dtiCommon.js')
        script(type='text/javascript', src='/js/v2/dorsettUtility.js')
        script(src="/js/pointInspector/app/require.config.js")
        script(data-main="app/startup", src="/js/lib/require.min.js")

    body
        .noAccess
            i.fa.fa-exclamation-triangle
            .condition.permissionDenied
                h3.msg Permission Denied
                p Please contact your supervisor if you feel you should have access to this point.
            .condition.pointNotFound
                h3.msg Point not found
                p Query failed. Unable to locate point.
        .wrapper
            .titleBar
                .navToggle
                    i.toggleOpen.fa.fa-navicon
                    i.toggleClose.fa.fa-times-circle
                .titleSection
                    // ko ifnot: isInEditMode
                    span.pointName(data-bind="text: point.data.Name")
                    br
                    //.btn.btn-xs.btn-default.pointRefresh(data-bind="click: function() { location.reload(true); document.title=point.data.Name(); }", title="Refresh Point")
                    //    i.fa.fa-refresh
                    // /ko
                    span.pointType(data-bind="text: point.data['Point Type'].Value")
                    div.hiddenPointData.text-center
                        span(data-bind="text: point.data._id")
                        |  &gt; 
                        span(data-bind="text: point.data.Name")
                .actions
                    // ko ifnot: isInEditMode
                    // ko if: authorize(point.data, permissionLevels.WRITE)
                    // ko if: point.data._pStatus() === 2
                    .btn.btn-success.btn-sm(data-bind="click: restorePoint") Restore
                    // /ko
                    // ko ifnot: point.data._pStatus() === 2
                    .btn.btn-info.btn-sm(data-bind="click: toggleEditMode")  Edit
                    // /ko
                    // /ko
                    //- Removing in favor of the window's 'X' close button
                    //- .btn.btn-default.btn-sm(data-bind="click: close") Close
                    // /ko
                    // ko if: isInEditMode
                    //- Removing cancel based on DT Utah feedback https://basecamp.com/1781223/projects/13083930/todos/282404793
                    //- .btn.btn-link.btn-sm(data-bind="click: toggleEditMode")  Cancel
                    .btn-group
                        //- Hidden feature - right-click 'Save & Close' to perform just a 'Save'
                        //- The 'disable' binding was not compatible with our Bootstrap button (disabled was set properly, but was never removed)
                        button.btn.btn-success.btn-sm.btnSave(data-bind='click: point.saveAndClose, event: { contextmenu: point.save }, attr: { "disabled": point.status() === "saving" }')
                            i.fa.fa-spin.fa-spinner(data-bind='visible: point.status() === "saving" ')
                            span Save & Close
                        //- button.btn.btn-success.btn-sm.dropdown-toggle(data-bind="click:point.save")
                            | Save
                        button.btn.btn-success.btn-sm.dropdown-toggle(data-toggle='dropdown', data-bind='attr: { "disabled": point.status() === "saving" }')
                            span.caret
                        ul.dropdown-menu.dropdown-menu-right
                            li
                                a(href='javascript://', data-bind='click:point.save') Save
                    // /ko
            .chassis(data-bind="component: { name: baseComponent, params: $data }")
            .statusBar(data-bind="component: { name: 'ctl-statusBar', params: $data }")
        .viewOverlay
        .invalidCharMsg
            //- invalidChar has no class definition; it is only used for DOM retrieval
            span.invalidChar
            span  character is not allowed

        point-selector

        script#comp-point-selector-template(type="text/html")
            //- .pointSelectorModal.modal.modal-fixed-header.blue-grey-form.materialize(data-bind="visible: library() === 'materialize', css: { 'modal-fixed-footer' : (mode() === 'filter'), 'filterMode' : (mode() === 'filter') }")
            //-     .modal-header
            //-         .modalTitle(data-bind="text: modalText")
            //-     .modal-content(data-bind="css: {busy: busy}, delegate: [{event: 'click', selector: 'tbody td', handler: handleRowClick, scope: $data}, {event: 'mousedown', handler: handleRowMouseDown, selector: 'tbody td', scope: $data}, {event: 'contextmenu', selector: '.pointTypeList span', handler: handleRightClick, scope: $data}]")
            //-         .fetching
            //-             .progress
            //-                 .indeterminate
            //-         .content-header
            //-             .pointSearch.input-field
            //-                 i.material-icons.prefix search
            //-                 input#pointSearchInput(type='search', data-bind="textInput: searchString, hasFocus: focus ")
            //-             .pointTypeButton
            //-                 a.btn-flat.waves-effect.pointTypeDropdownButton(href="#", data-bind="click: togglePointTypeList, css: { active: pointTypesShown}")
            //-                     span(data-bind="text: pointTypeText")
            //-                     i.material-icons.dropdownCaret arrow_drop_down
            //-             .pointTypeList.z-depth-1(data-bind="foreach: pointTypes, fadeVisible: pointTypesShown")
            //-                 // ko if: visible
            //-                 span
            //-                     input.filled-in(type='checkbox', data-bind="checked: selected, attr: {id: 'spt-' + $index() }")
            //-                     label.label-tight(data-bind="text: name, attr: {for: 'spt-' + $index()}")
            //-                 // /ko

            //-         //- // ko if: results().length > 0
            //-         //- .pointList(data-bind="visible: results().length > 0")
            //-             //- .pointHeaders
            //-         table.pointList.striped.fixedHeader
            //-             thead
            //-                 tr.white-text.blue-grey
            //-                     th Point Type
            //-                     th Name
            //-             tbody
            //-                 // ko foreach: results
            //-                 tr
            //-                     td(data-bind="text: pointType")
            //-                     td(data-bind="text: path")
            //-                 // /ko
            //-     // ko if: mode() === 'filter'
            //-     .modal-footer
            //-         .btn.blue-grey.waves-effect.filterModeAccept(data-bind="delegate: [{event: 'click', handler: handleAcceptFilterClick}]") Accept
            //-         .btn-flat.modal-action.modal-close.waves-effect.filterModeCancel Cancel
            //-     // /ko
            //- //- end materialize modal


            .pointSelectorModal.modal.fade.bootstrap
                .modal-dialog
                    .modal-content(data-bind="delegate: [{event: 'click', selector: 'tbody td', handler: handleRowClick, scope: $data}, {event: 'mousedown', handler: handleRowMouseDown, selector: 'tbody td', scope: $data}, {event: 'contextmenu', selector: '.pointTypeList span', handler: handleRightClick, scope: $data}]")
                        .modal-header
                            h3.modal-title(data-bind="text: modalText")

                            .content-header
                                .pointSearch.form-inline
                                    .form-group
                                        label(for="pointSearchInput") Search
                                        //- i.material-icons.prefix search
                                        input#pointSearchInput.form-control(type='search', data-bind="textInput: searchString, hasFocus: focus ")
                                .pointTypeButton
                                    a.btn.btn-default.pointTypeDropdownButton(href="#", data-bind="click: togglePointTypeList, text: pointTypeText, css: { active: pointTypesShown }")
                                        //- span(data-bind="text: pointTypeText")
                                        //- i.material-icons.dropdownCaret arrow_drop_down
                                .pointTypeList.z-depth-1(data-bind="foreach: pointTypes, fadeVisible: pointTypesShown")
                                    // ko if: visible
                                    span
                                        input.filled-in(type='checkbox', data-bind="checked: selected, attr: {id: 'spt-' + $index() }")
                                        label.label-tight(data-bind="text: name, attr: {for: 'spt-' + $index()}")
                                    // /ko

                        .modal-body(data-bind="css: {busy: busy}")
                            .fetching
                                .progress
                                    .indeterminate

                            

                            //- // ko if: results().length > 0
                            //- .pointList(data-bind="visible: results().length > 0")
                                //- .pointHeaders
                            table.pointList.striped.fixedHeader
                                thead
                                    tr.white-text.blue-grey
                                        th Point Type
                                        th Name
                                tbody
                                    // ko foreach: results
                                    tr
                                        td(data-bind="text: pointType")
                                        td(data-bind="text: path")
                                    // /ko

                        // ko if: mode() === 'filter'
                        .modal-footer
                            .btn.blue-grey.waves-effect.filterModeAccept(data-bind="delegate: [{event: 'click', handler: handleAcceptFilterClick}]") Accept
                            .btn-flat.modal-action.modal-close.waves-effect.filterModeCancel Cancel
                        // /ko
            //- end bootstrap modal
