doctype html
html
    head
        title
        link(rel='stylesheet', href='/css/lib/jqwidgets/jqx.base.css')
        link(rel='stylesheet', href='/css/lib/jqwidgets/jqx.flat.css')
        link(rel='stylesheet', href='/css/lib/font-awesome-4.0.3/css/font-awesome.min.css')
        link(rel='stylesheet', href='/css/lib/jquery-ui-dark.css')
        link(rel='stylesheet', href='/css/lib/materialize.css')
        link(rel='stylesheet', href='/css/lib/materialize.icons.css')
        link(rel='stylesheet', href='/css/lib/materialdesignicons.css')
        link(rel='stylesheet', href='/css/lib/materialize.clockpicker.min.css')
        link(rel='stylesheet', href='/css/diColorPicker/diColorPicker.css')
        link(rel='stylesheet', href='/css/gpl/gpl.css')
        script.
            var gplData = {
                    upi: !{upi},
                    point: !{point},
                    references: !{references}
                };
    body.blue-grey-form(oncontextmenu="return false", data-bind="css: {loaded: loaded}")
        .mask
        .gplTooltip(style="display: none")
        canvas#gplCanvas
        canvas#toolbarCanvas
        //-(style="display: none; width: auto")

        .bottomBar.hideLoading
            //- span Grid Size
            //-     input(type="number", min="1", max="50", data-bind="value: gridSize")
            //- .btn.btn-small.waves-effect.waves-light.blue-grey#validate(style="display:none", data-bind="visible: isEdit === true") Validate
            .btn.btn-small.waves-effect.waves-light.blue-grey#save(style="display:none", data-bind="visible: isEdit === true") Save
            .btn.btn-small.waves-effect.waves-light.blue-grey#cancel(style="display:none", data-bind="visible: (isEdit === true && hasEdits() === false)") Cancel
            .btn.btn-small.waves-effect.waves-light.blue-grey#saveForLater(style="display:none", data-bind="visible: (isEdit === true && hasEdits() === true)") Save For Later
            .btn.btn-small.waves-effect.waves-light.blue-grey#discardChanges(style="display:none", data-bind="visible: (hasEdits() === true || hasEditVersion() === true)") Discard Changes
            .btn.btn-small.waves-effect.waves-light.blue-grey#edit(style="display:none", data-bind="visible: isEdit !== true") Edit
            span.editVersionAvailable(data-bind="visible: editVersionAvailable") *Edit Version Available
            .zoomSection.right.input-field
                label(data-bind="attr: { for: 'currentZoom' }")
                    a.mr5(href="", title="Reset Zoom", data-bind="click: resetZoom")
                        i.fa.fa-search
                input.blue-grey(type="number", min="25", max="400", data-bind="attr: { 'id': 'currentZoom' }, value: currentZoom")
                .percentSign &nbsp;%

        #gplSequenceProperties.modal.dtiModal.modal-fixed-header.modal-fixed-footer.blue-grey-form.fade
            .modal-header
                .modalTitle Sequence Properties
            .modal-content
                .row
                    .col.s12
                        .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: selectDevicePoint") Select Device
                        span.pointName(data-bind="text: deviceName")
                .row
                    .col.s6
                        .input-field
                            label(for="gplDescription") Sequence Description
                            input#gplDescription(type="text", data-bind="textInput: deviceDescription")
                    .col.s6.colorPicker
                        div Background Color
                        div#bgColorPicker(data-dropdown="true", data-sm-palette="true", data-vertical="true", data-insertpalette="true")
                .row
                    .col.s5.blue-grey-text.controllerDropdown
                        label(for="controllerDropdown") Controller
                        select#controllerDropdown(data-bind="options: controllers, optionsText: 'name', optionsValue: 'value', value: deviceControllerValue")
                        .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: applyController") Apply All
                .row(style="margin-top: 30px;margin-bottom: 3px")
                    .col.s6
                        span Update Interval
                    .col.s6
                        span Block Attributes
                .row(style="margin-bottom: 3px;")
                    .col.s2.gplUpdateIntervalMins
                        .input-field
                            label(for="deviceUpdateIntMins") Mins
                            input#deviceUpdateIntMins(type="number", min="0", max="59", placeholder="Min", data-bind="textInput: deviceUpdateIntervalMinutes")
                    .col.s2.gplUpdateIntervalSecs
                        .input-field
                            label(for="deviceUpdateIntSecs") Secs
                            input#deviceUpdateIntSecs(type="number", min="0", max="59", placeholder="Sec", data-bind="textInput: deviceUpdateIntervalSeconds")
                    .col.s2
                        .blankColumn
                    .col.s3.right
                        .input-field
                            input#checkboxShowValue.medium.filled-in(type="checkbox", data-bind="checked: deviceShowValue")
                            label(for="checkboxShowValue") Show Value
                    .col.s3.right
                        .input-field
                            input#checkboxShowLabel.medium.filled-in(type="checkbox", data-bind="checked: deviceShowLabel")
                            label(for="checkboxShowLabel") Show Label
                .row.applyButtons
                    .col.s4
                        .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: applyUpdateInterval") Apply All
                    .col.s3.right
                        .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: applyShowValue") Apply All
                    .col.s3.right
                        .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: applyShowLabel") Apply All
            .modal-footer
                .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: updateSequenceProperties") Save

        // TODO - doesn't look like this is used any longer
        //#colorpickerModal.modal.fade(tabindex="-1", role="dialog", aria-hidden="true")
        //    .modal-dialog.modal-sm
        //        .modal-content
        //            .modal-body
        //                .row
        //                    .col-sm-12.center-block
        //                        div.colorpicker
        //                            div#bgColorPicker(data-dropdown="true", data-sm-palette="true", data-vertical="true", data-insertpalette="true")
        //            .modal-footer
        //                .btn.btn-default.btn-sm(data-bind="click: hideBackgroundColorModal", data-dismiss="modal") Close
        //                .btn.btn-primary.btn-sm(data-bind="click: updateBackgroundColor") Save

        #gplMessage.modal.dtiModal.modal-fixed-header.blue-grey-form.fade
            .modal-header
                .modalTitle Edit Precision
            .modal-content GPL Message
                #gplMessageBody.panel-body

        #safeForLaterConfirm.modal.dtiModal.modal-fixed-header.blue-grey-form.fade
            .modal-content
                .modal-content
                    h5 Return to View Mode?
                .modal-footer
                    .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: doCancel") Ok

        #editTextModal.modal.dtiModal.modal-fixed-header.modal-fixed-footer.blue-grey-form.fade
            .modal-header
                .modalTitle Edit Text
            .modal-content
                .row
                    .col.s12.spacedControls
                        textarea(rows="3", data-bind="textInput: editText")
                .row
                    .col.s2
                        label(for="editTextFontSize") Font Size
                        input#editTextFontSize(type="number", min="8", max="72", data-bind="textInput: editTextFontSize")
                    .col.s2
                    .col.s3
                        input#editTextBold.medium.filled-in(type="checkbox", data-bind="checked: editTextBold")
                        label(for="editTextBold") Bold
                    .col.s3
                        input#editTextItalic.medium.filled-in(type="checkbox", data-bind="checked: editTextItalic")
                        label(for="editTextItalic") Italic
                .row
                    .col.s8(style="height:200px;width:250px")
                        div#fontColorPicker(data-dropdown="true", data-sm-palette="true", data-vertical="true", data-insertpalette="true")

            .modal-footer
                .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: updateText") Save

        #editActionButtonModal.modal.dtiModal.modal-fixed-header.modal-fixed-footer.blue-grey-form.fade
            .modal-header
                .modalTitle Edit Button
            .modal-content
                .row
                    .col.s2
                        label(for="actionButtonText") Text:
                .row
                    .col.s10
                        input#actionButtonText(type="text", data-bind="textInput: actionButtonText")

                .row
                    .col.s3
                        .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: selectActionButtonPoint") Select Point
                    .col.s9
                        span(data-bind="text: actionButtonPointName")

                .row
                    .col.s4
                        input#linkToPoint(type="radio", name="actionButtonType", value="link", data-bind="checked: actionButtonType")
                        label(for="linkToPoint") Link to point
                .row
                    .col.s4
                        input#linkToReport(type="radio", name="actionButtonType", value="report", data-bind="checked: actionButtonType")
                        label(for="linkToReport") Link to Report
                .row
                    .col.s4
                        input#linkToControlPoint(type="radio", name="actionButtonType", value="control", data-bind="checked: actionButtonType")
                        label(for="linkToControlPoint") Control point

                .row(data-bind="visible: actionButtonType() === 'control'")
                    .col.s8
                        label(for="actionButtonParameter") Parameter:
                        input#actionButtonParameter(data-bind="textInput: actionButtonParameter")

            .modal-footer
                .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: updateActionButton") Save
                .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: deleteActionButton") Delete

        #editActionButtonValueModal.modal.dtiModal.modal-fixed-header.modal-fixed-footer.blue-grey-form.fade
            .modal-header
                .modalTitle Enter Value
            .modal-content
                .row.bm10px
                    .form-group
                        .col.s2.noBoldControls
                            label(for="actionButtonValue") Value:
                        .col.s10
                            input#actionButtonValue.form-control.input-sm.input-xs(data-bind="numeric: actionButtonValue, value: actionButtonValue")
            .modal-footer
                .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: sendActionButtonValue") Send Command

        #actionButtonReportParameterModal.modal.dtiModal.fade(tabindex="-1", role="dialog", aria-hidden="true")
            .modal-dialog
                .modal-content
                    .modal-header
                        h3.panel-title Enter Report Parameters
                    .modal-body.clearfix
                        .form-group.noBoldControls.form-inline
                            .col-xs-4
                                input#reportTypePredefined(type="radio", value="predefined", name="reportType", data-bind="checked: actionButtonReportType")
                                label(for="reportTypePredefined") Predefined Range
                            .col-xs-8
                                input#reportTypeCustom(type="radio", value="custom", name="reportType", data-bind="checked: actionButtonReportType")
                                label(for="reportTypeCustom") Custom Range

                            .col-xs-12.bm10px(data-bind="visible: actionButtonReportType() === 'predefined'")
                                select.form-control.select-sm.input-sm(data-bind="value: actionButtonReportDuration")
                                    option None
                                    option Last 12 hours
                                    option Last 24 hours
                                    option Last 48 hours
                                    option Last 72 hours
                                    option Last 7 days
                                    option Last month
                                    option Last 6 months
                                    option Last year

                            .col-xs-12.form-inline.shortInputs(data-bind="visible: actionButtonReportType() === 'custom'")
                                .row.bm10px
                                    .col-xs-6
                                        label From Date
                                        input.input-sm.form-control(data-bind="datepicker: reportFromDate")
                                    .col-xs-6
                                        label From Time
                                        input.input-sm.form-control(data-bind="clockpicker: reportFromTime")
                                .row
                                    .col-xs-6
                                        label From Date
                                        input.input-sm.form-control(data-bind="datepicker: reportToDate")
                                    .col-xs-6
                                        label From Time
                                        input.input-sm.form-control(data-bind="clockpicker: reportToTime")

                    .modal-footer
                        //.btn.btn-small.waves-effect.waves-light.blue-grey(data-dismiss="modal") Close
                        .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: openReport") Open Report


        #editInputOutput.modal.dtiModal.modal-fixed-header.blue-grey-form.fade
            .modal-content
                .row(data-bind="visible: editBlockType() === 'MonitorBlock' || editBlockType() === 'ControlBlock'")
                    //.row
                    //    .col.s4.subtitle Reference
                    .row.pointName
                        .col.s3.btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: editPointReference") Data Point
                        .col.s9
                            span(data-bind="text: editPointName")
                .row(data-bind="visible: editBlockType() === 'ConstantBlock'")
                    //.row
                    //    .col.s4.subtitle Configuration
                    .row
                        // ko if: (editPointValueOptions().length > 0)
                        .col.s3
                            label Options
                            select.form-control.input-sm(data-bind="options: editPointValueOptions, optionsText: 'name', optionsValue: 'value', value: editPointValue")
                        // /ko
                        // ko if: (editPointValueOptions().length === 0)
                        .col.s3
                            label(for="constantvalue") Value
                            input#constantvalue.form-control.input-sm(type="number", data-bind="value: editPointValue")
                        // /ko
                .row
                    .col.s6.input-field
                        //- ch485 check for label validity & indicate invalid label
                        input#blocklabel.validate(data-bind="textInput: editPointLabel, event: { keyup: validateLabel }, css: { invalid: !labelIsValid() }")
                        label(for="blocklabel", data-bind="attr: { 'data-error': labelError }") Block Label
                .row
                    .col.s4 Numeric Format
                    .col.s2
                    .col.s4 Label Format
                .row
                    .col.s3.numericFormat
                        label(for="numberOfCharacters") # of Characters
                        input#numberOfCharacters.pull-right(type="number", min="1", max="20", data-bind="numeric: editPointCharacters, value: editPointCharacters")
                    .col.s3.numericFormat
                        label(for="numberOfDecimals") # of Decimals
                        input#numberOfDecimals.pull-right(type="number", min="0", max="20", data-bind="numeric: editPointDecimals, value: editPointDecimals")
                    .col.s6.labelFormat
                        .checkbox
                            input#showLabel.medium.filled-in(data-bind="checked: editPointShowLabel", type="checkbox")
                            label(for="showLabel") Show Label
                        .checkbox
                            input#showPresentValue.medium.filled-in(data-bind="checked: editPointShowValue", type="checkbox")
                            label(for="showPresentValue") Show Present Value
            .modal-footer
                .btn.btn-small.waves-effect.waves-light.blue-grey(data-bind="click: updatePoint, css: {disabled: editBlock_saveDisabled }") Save

        #jqxMenu.contextMenu.hideLoading
            //- ch281 (change href="" to href="#")
            ul.editSection
                li.block(data-ignoretheme="true")
                    a(href='#', data-bind="click: editBlock") Edit Block
                li.block.nonPoint(data-ignoretheme="true")
                    a(href="#", data-bind="click: showPointEditor") Edit Point
                li.block(data-ignoretheme="true")
                    a(href="#", data-bind="click: deleteBlock") Delete Block
                li.line(data-ignoretheme="true")
                    a(href="#", data-bind="click: deleteLine") Delete Line
                li.text(data-ignoretheme="true")
                    a(href="#", data-bind="click: deleteBlock") Delete Text
                li.default(data-ignoretheme="true")
                    a(href="#", data-bind="click:showUpdateSequenceModal") Sequence Properties
                li.default(data-ignoretheme="true")
                    a(href="#", data-bind="click: showDevicePoint") Edit Device Point
                li.default(data-ignoretheme="true")
                    //- ch473
                    //- a(href="#", data-bind="click: addNewButton") Action Button
                    a(href="#", data-bind="click: addNewActionButton") Add Action Button
                //- li.default(data-ignoretheme="true")
                //-     a(href="#", data-bind="click: addNewDynamic") Dynamic
                li.default(data-ignoretheme="true")
                    a(href="#", data-bind="click: addNewText") Add Text
            ul.viewSection
                li.default(data-ignoretheme="true")
                    a(href="#", data-bind="click: showDevicePoint") Edit Device Point
            //- /ch

        script(src='/js/lib/jquery.min.js')
        script(src='/js/lib/jquery.blockUI.js')
        script(src='/js/lib/materialize.min.js')
        script(src='/js/lib/jquery-ui.js')
        script(src='/js/lib/jquery-clockpicker.min.js')
        script(src='/js/lib/fabric.js')
        script(src='/js/lib/socket.io.js')
        script(src='/js/lib/knockout-3.2.0.js')
        script(src='/js/lib/jqwidgets/jqxcore.js')
        script(src='/js/lib/jqwidgets/jqxdropdownbutton.js')
        script(src='/js/lib/jqwidgets/jqxcolorpicker.js')
        script(src='/js/lib/jqwidgets/jqxmenu.js')
        script(src='/js/util/components/colorpicker/diColorPicker.js')
        script(src='/js/lib/store2.min.js')
        script(src='/js/v2/dtiCommon.js')
        script(src='/js/v2/dorsettUtility.js')
        //- script(src='/js/gpl/gpl.textblock.js')
        script(src='/js/gpl/gpl.js')