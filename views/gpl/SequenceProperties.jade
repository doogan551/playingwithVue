.tabbable
    ul.nav.nav-pills
        li.active
            a(href='#pane1', data-toggle='tab') Device
        li
            a(href='#pane2', data-toggle='tab') Default Properties
        li(data-bind='visible:!isViewer()')
            a(href='#pane3', data-toggle='tab') Sequence Background
    .tab-content
        #pane1.tab-pane.active
            .well
                .row
                    .form-group
                        label.col-xs-3.control-label Device Point
                        .col-xs-9
                            span.badge.badge-info(data-bind='text:devicePointName')
                            button.btn.btn-sm.btn-primary(data-bind='event:{click:callDevicePoint},visible:!isViewer()')
                                | Device
                        br
                        br
                .row
                    .form-group
                        label.col-xs-3.control-label Description
                        .col-xs-9
                            d(data-bind='visible:!isViewer()')
                                #description.editmode(data-bind='html:description', style='width: 176px;')
                            div(data-bind='html:description')
        #pane2.tab-pane
            .well
                .row
                    .form-group
                        label.col-xs-3.control-label Controller
                        .col-xs-6
                            select.form-control.input-sm(data-bind="enable:!isViewer(), options:controllers, optionsText: 'key', optionsValue:'val', value:defaultController, event:{click:changeSelect.bind($element, 'Controller')}")
                        .col-xs-3
                            a(href='javascript:;', data-bind='visible:!isViewer(), event:{click:applyAll.bind("Controller")}') Apply All
                .row
                    .form-group
                        .col-xs-3
                        .checkbox.col-xs-9(style='padding-left:40px')
                            label
                                input(type='checkbox', data-bind='enable:!isViewer(), checked:defaultShowLabel')
                                | Show Label
                                | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                a(data-bind='visible:!isViewer(), event:{click:applyAll.bind("Show Label")}') Apply All
                .row
                    .form-group
                        .col-xs-3
                        .checkbox.col-xs-9(style='padding-left:40px')
                            label
                                input(type='checkbox', data-bind='enable:!isViewer(), checked:defaultShowValue')
                                | Show Value
                                | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                a(data-bind='visible:!isViewer(), event:{click:applyAll.bind("Show Value")}') Apply All
                .row
                    .form-group
                        .col-xs-3
                            label.col-xs-12.control-label Update Interval
                        .col-xs-1 Min:
                        .col-xs-2
                            input#min.form-control(name='min', data-bind="enable:!isViewer(), event: { change: updateInterval.bind($element, true) }, value:getSPropValue('Update Interval') > 60 ? Math.floor(getSPropValue('Update Interval') / 60) : 0", min="0", max="60")
                        .col-xs-1
                            |Sec:
                        .col-xs-2
                            input#sec.form-control(name='sec', data-bind='enable:!isViewer(), event: { change: updateInterval.bind($element, false) }, value:getSPropValue(\'Update Interval\') % 60', min='0', max='60')
                        .col-xs-3
                        a(href='javascript:;', data-bind='visible:!isViewer(), event:{click:applyAll.bind("Update Interval")}') Apply All
        #pane3.tab-pane
            .well
                .row
                    .form-group
                        br
                        label.col-xs-4.control-label Background Color
                        .col-xs-8
                            #picker
                                input#bgColor.input-medium(data-bind='value:bgColor', type='text')