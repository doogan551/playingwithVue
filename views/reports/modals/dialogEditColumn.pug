#editColumnModal.modal.fade.modal-fixed-footer(data-bind="with: $root.currentColumnEdit", style="width: 450px;height: 800px;")
    .modal-content
        // ko if: $root.currentColumnEdit() !== undefined
        .headerInfo
            h6 Edit Column
        form.blue-grey-text.form-horizontal(role="form")
            .row.blue-grey-text(style="display: block")
                .input-field
                    // ko if: ($root.reportType() !== 'Property')
                    .control-label.col-sm-3(style="padding-top: 0px;")
                    // ko if: ($root.canEdit())
                    a.btn-mini.tiny.waves-effect.waves-light(data-bind="click: function(){ $root.clearModalColumnPoint() }, tooltip: { title: 'Clear' }")
                        i.material-icons.tiny.center.blue-grey-text delete
                    a.btn-mini.tiny.waves-effect.waves-light(data-bind="click: function(){ $root.selectPointForModalColumn() }, tooltip: { title: 'Edit' }")
                        i.material-icons.tiny.center.blue-grey-text edit
                    // /ko
                    .columnName(data-bind="text: $data.colName, click: function(){ $root.showPointReview($data) }")
                    // /ko
            // ko if: ($root.reportType() !== 'Property')
            .row.blue-grey-text
                .col.s4.input-field
                    input.form-control.gridColumnDisplayName#columnDisplayName(data-bind="enable: $root.canEdit(), textInput: $data.colDisplayName, event: { change: function() { $root.designChanged(true) } }", required, type="text")
                    label(data-bind="updateLabel: $data.colDisplayName, attr: {for: 'columnDisplayName'}") Display Name
            // ko if: ($data.canCalculate)
            .row.blue-grey-text
                .col.s2.input-field
                    input.form-control.inputMultiplier#multiplierInput(data-bind="enable: $root.canEdit(), textInput: multiplier", type="number")
                    label(data-bind="attr: {for: 'multiplierInput'}") Multiplier
            // /ko
            // ko if: ($root.reportType() === 'Totalizer' && canCalculate)
            .row.blue-grey-text
                .col.s10
                    div(style="display: inline-flex")
                        .input-field.availableTotalizerOperatorsContainer(data-bind="css: {disabled: !$root.canEdit()}")
                            // ko if: (valueList.length > 1)
                            select#totalizerOperators(data-bind="options: valueList, optionsText: $data, value: operator, dtiReportsMaterializeSelect: operator")
                            label(data-bind="attr: {for: 'totalizerOperators'}") Type
                            // /ko
                            // ko if: (valueList.length === 1)
                            label.active Type
                            .operatorValue(data-bind="text: operator")
                            // /ko
                        .input-field.precision
                            // ko if: (canCalculate)
                            input.form-control.gridInputPrecision#precisionInput(data-bind="reportPrecisionInput: precision, enable: $root.canEdit()", type="text", min="0", max="20", viewModelField="precision")
                            label.precisionLabel(data-bind="attr: {for: 'precisionInput'}") Precision
                            // /ko
            // /ko
            // ko if: ($root.canEdit() && canBeCharted)
            .row.blue-grey-text
                .col.s10
                    div(style="display: inline-flex")
                        .input-field.includeInChart
                            input.includeInChartColumn.form-control.input-md.filled-in#includeInChartCheckbox(data-bind="checked: includeInChart, enable: ($root.canEdit() && !!canBeCharted)", type="checkbox")
                            label(data-bind="attr: {for: 'includeInChartCheckbox'}") Chart
                        .input-field.yaxisChartGroup.availableAxisGroupsContainer
                            select#axisChartGroup(data-bind="options: $root.yaxisGroups, optionsText: $data, attr: {disabled: !includeInChart}, value: yaxisGroup, dtiReportsMaterializeSelect")
                            label(data-bind="attr: {for: 'axisChartGroup'}") Group
            // /ko
            // /ko
        // /ko
    .modal-footer
        a.btn.waves-effect.waves-light.blue-grey.cancelGlobalChange.modal-action.modal-close(data-bind="click: $root.closeEditColumnModal") Cancel
        a.btn.waves-effect.waves-light.blue-grey.setData.modal-action.modal-close(data-bind="click: $root.setEditedColumnData") OK