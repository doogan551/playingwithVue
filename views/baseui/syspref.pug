doctype html
html
    head
        meta(name='viewport',content='width=device-width,initial-scale=1')
        title= title
        link(rel='stylesheet', href='/css/lib/jqwidgets/jqx.base.css')
        link(rel='stylesheet', href='/css/lib/font-awesome-4.3.0/css/font-awesome.min.css')
        link(rel='stylesheet', href='/css/lib/bootstrap.3.0.2.min.css')
        link(rel='stylesheet', href='/css/lib/fullcalendar.css')
        link(rel='stylesheet', href='/css/lib/scheduler.css')
        link(rel='stylesheet', href='/css/lib/jquery-clockpicker.css')
        link(rel='stylesheet', href='/css/lib/jquery.toast.min.css')
        link(rel='stylesheet', href='/css/diColorPicker/diColorPicker.css')
        link(rel='stylesheet', href='/css/lib/DataTables-1.10.12/media/css/dataTables.bootstrap.min.css')
        // syspref.css must follow after bootstrap.min.css so we can override bootstrap themes
        link(rel='stylesheet', href='/css/baseui/syspref.css')
        link(rel='stylesheet', href='/css/baseui/alarmTemplate.css')
        script(type='text/javascript', src='/js/lib/json2.js')
        script(type='text/javascript', src='/js/lib/jquery.min.js')
        script(type='text/javascript', src='/js/lib/jquery-clockpicker.min.js')
        script(type='text/javascript', src='/js/lib/jquery-ui.js')
        script(type='text/javascript', src='/js/lib/jquery.toast.min.js')
        script(type='text/javascript', src='/js/lib/knockout-3.2.0.js')
        script(type='text/javascript', src='/js/lib/knockout.viewModel.js')
        script(type='text/javascript', src='/js/lib/knockout.mapping-2.3.5.js')
        script(type='text/javascript', src='/js/lib/knockout-sortable.js')
        script(type='text/javascript', src='/js/lib/bootstrap-3.0.3.min.js')
        script(type='text/javascript', src='/js/lib/ko.validation.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxcore.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxdatetimeinput.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxcalendar.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxtooltip.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/globalization/globalize.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxdata.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxbuttons.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxscrollbar.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxmenu.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxcheckbox.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxlistbox.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxdropdownlist.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxvalidator.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxwindow.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxcolorpicker.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxdropdownbutton.js')
        script(type='text/javascript', src='/js/lib/jqwidgets/jqxknockout.js')
        script(type='text/javascript', src='/js/lib/date.js')
        script(type='text/javascript', src='/js/lib/moment.js')
        script(type='text/javascript', src='/js/lib/underscore.js')
        script(type='text/javascript', src='/js/lib/fullcalendar.js')
        script(type='text/javascript', src='/js/lib/scheduler.js')
        script(type='text/javascript', src='/js/util/components/colorpicker/diColorPicker.js')
        script(type="text/javascript", src='/js/lib/DataTables-1.10.12/media/js/jquery.dataTables.min.js')
        script(type="text/javascript", src='/js/lib/DataTables-1.10.12/media/js/dataTables.bootstrap.min.js')
        script(type='text/javascript', src='/js/v2/dorsettUtility.js')
        script(type='text/javascript', src='/js/baseui/syspref.js')

    body.whitebg
        div#navbar
            ul(data-bind="foreach: sections")
                li(data-bind="click: function() {$root.goToSection(displayName);}, css: { error: hasError, selected: displayName == $root.section() }")
                    i(class="fa fa-asterisk", data-bind="visible: dirty() && !hasError()")
                    i(class="fa fa-warning", data-bind="visible: hasError")
                    span(data-bind="text: displayName")

            #navActions.center-block(data-bind="visible: dirty")
                button(class="btn btn-default btn-sm", data-bind="enable: dirty, click: cancelAll") Cancel
                button(class="btn btn-info btn-sm", data-bind="enable: dirty, click: saveAll") Save
        div#content
            // ------ Calendar --------------------------------------------------------------------------------------
            div#calendar(data-bind="visible: section() == 'Calendar'")
                .title Season Control

                div.calendarData(data-bind="with: calendarViewModel", style="display: none")
                    #season
                        input(type='radio', data-bind='checked: season,click:changeSeason,attr:{disabled:gettingData()}' name='season', id='heatingSeason', value='Heating')
                        label(for='heatingSeason') Heating
                        input(type='radio', data-bind='checked: season,click:changeSeason,attr:{disabled:gettingData()}' name='season', id='coolingSeason', value='Cooling')
                        label(for='coolingSeason') Cooling

                    br
                    br
                    .title System Holidays
                        #yearContainer
                            a.fa.fa-chevron-circle-left(href='#', data-bind='click: decrementYear', title='Previous Year')
                            span#year(data-bind='text: year')
                            a.fa.fa-chevron-circle-right(href='#', data-bind='click: incrementYear', title='Previous Year')

                    div(data-bind="visible: holidays().length > 0")
                        table#holidaysTable(data-bind="template: {foreach: holidays}")
                            tr
                                td.dow(data-bind="text: $parent.getDayOfWeek($data)")
                                td.month(data-bind="text: $parent.getMonth($data)")
                                td.icon
                                    a.showOnHover(href='#', data-bind="click: $parent.decrementDay", title='Click to subtract one day')
                                        img(src='/img/icon_minus.png')
                                td.date
                                    span.dateText(data-bind="text: date")
                                td.icon
                                    a.showOnHover(href='#', data-bind="click: $parent.incrementDay", title='Click to add one day')
                                        img(src='/img/icon_plus.png')
                                td.spacer15
                                td.clickToEdit(data-bind="clickEdit: comment")
                                    span(data-bind="text: comment")
                                    input.hide.comment.form-control(type='text', data-bind="value: comment", data-role="none")
                                td &nbsp;
                                td.icon
                                    a.showOnHover(href='#',data-role='none', data-bind='click: $parent.delete', title='Click to delete this entry')
                                        img(src='/img/icon_delete.png')

                    div(data-bind="visible: holidays().length == 0")
                        |No holidays have been defined for this year. Click&nbsp;
                        a(href='#',data-bind='click: copyPreviousYear') here
                        |&nbsp;to copy the previous year's data.

                    div(style='position:relative')
                        br
                        input#datepicker(type='hidden')
                        //div#jqxDateTimeInput
                        div#jqxCalendar
                        span(onClick='javascript:$("#jqxCalendar").toggle()')
                            img(src='/img/icon_calendarAdd.png')
                        span.italics &nbsp; Click the calendar to add a holiday.&nbsp;

            // ------ Controllers -----------------------------------------------------------------------------------
            div#controllers(data-bind="visible: section() == 'Controllers'")
                .title Manage Controllers

                #controllerContainer(data-bind="with: controllersViewModel")
                    #controllerAlert(style="height: 75px")
                        #controllerMessage(style="display: none", class="alert-info")

                    #controllerGridContainer
                        #controllerTableHeader
                        #controllerTableContainer
                            table#controllerGrid.linedTable.sortable
                                thead
                                    tr
                                        th.col-sm-1
                                            div(data-bind="click: sortByID") ID
                                        th.col-sm-2
                                            div(data-bind="click: sortByName") Name
                                        th.col-sm-8
                                            div(data-bind="click: sortByDescription") Description
                                        th.col-sm-1
                                tbody(data-bind="foreach: controllers")
                                    tr(data-bind="visible: $data['Controller Name']() !== ''")
                                        td.controllerID(data-bind="text: $data['Controller ID']")
                                        td.controllerName(data-bind="clickEdit: $data['Controller Name']")
                                            span(data-bind="text: $data['Controller Name']")
                                            input.hide.form-control(type="text", data-bind="value: $data['Controller Name']")
                                        td.controllerDescription(data-bind="clickEdit: $data.Description")
                                            span(data-bind="text: $data.Description")
                                            input.hide.form-control(type="text", data-bind="value: $data.Description")
                                        td.controllerDelete
                                            span(class="showOnHover valign pull-right" data-bind="visible: !$data.isUser")
                                                a(href="#", title="Delete", data-bind="click: $parent.deleteController")
                                                    img(src="/img/icon_delete.png")

                    //- div(style="width: 100%")
                    //-     #controllerGrid.di-grid

                    #controllerActionBar
                        button(id='controllerAdd', type='button', class='btn btn-primary btn-sm', data-bind='click: showForm, visible: showEntryForm() == false ') Add New

                    #controllerEntryForm(data-bind="visible: showEntryForm", class="panel panel-default")
                        form(id='newControllerForm', action='./', data-bind="submit: handleFormSubmit", class="form-inline", role="form")
                            .panel-body
                                .form-group
                                    label(for='newControllerName', class="sr-only") Name
                                    input(data-bind='value: controllerName', id='newControllerName', type='text', placeholder='Name', class="form-control")

                                .form-group
                                    label(for='newControllerDesc', class="sr-only") Description
                                    input(data-bind='value: controllerDesc', id='newControllerDesc', type='text', placeholder='Description', class="form-control")

                                #addControllerActionBar
                                    button(type='button', class="pull-right btn btn-sm btn-link", data-bind="click: resetForm") Cancel
                                    button(id='newControllerSubmit', type='submit', class='btn btn-primary btn-sm pull-right') Submit

            // ------ Control Priority Text -------------------------------------------------------------------------
            div#controlPriorityText(data-bind="visible: section() == 'Control Priority Text'")
                .title Priority Levels

                .scrollableContainer(data-bind="with: controlPriorityTextViewModel")
                    .scrollableGridContainer(style="height: 100%")
                        .scrollableTableHeader
                        .scrollableTableContainer
                            table#controlPriorityList.linedTable
                                thead
                                    tr
                                        th.col-sm-1 Priority
                                        th.col-sm-11 Text
                                tbody(data-bind="foreach: controlPriorities")
                                    tr
                                        td(data-bind="text: $data['Priority Level']")
                                        td.clickToEdit(data-bind="clickEdit: $data['Priority Text']")
                                            span(data-bind="text: $data['Priority Text']")
                                            input.hide.form-control(type="text", maxlength="40", data-bind="value: $data['Priority Text']")

            // ------ Custom Colors  --------------------------------------------------------------------------------
            div#customColorCodes(data-bind="visible: section() == 'Custom Color Codes'")
                div(data-bind="with: customColorCodesViewModel")
                    .title(data-bind="text: displayName")
                    table#customColorCodesList.linedTable
                        thead
                            th.col-sm-1
                            th.col-sm-3
                        tbody(data-bind="foreach: customColorCodes")
                            tr
                                td(data-bind="text: $index() + 1")
                                td
                                    div
                                        div(data-usedropdown="true", data-insertpalette="false", data-bind="diColorpicker: hexColor")

            // ------ Quality Codes ---------------------------------------------------------------------------------
            div#qualityCodes(data-bind="visible: section() == 'Quality Codes'")
                .title Quality Code Enable

                div(data-bind="with: qualityCodesViewModel")
                    .qualityCodeOptions
                        .qualityCodeRow
                            div
                                input#COVDisabled(type="checkbox", data-bind="checked: covDisabled")
                                label(for="COVDisabled") COV Disabled
                            div
                                input#AlarmsOff(type="checkbox", data-bind="checked: alarmsOff")
                                label(for="AlarmsOff") Alarms Off
                        .qualityCodeRow
                            div
                                input#Overriden(type="checkbox", data-bind="checked: overriden")
                                label(for="Overriden") Overriden
                            div
                                input#CommandPending(type="checkbox", data-bind="checked: commandPending")
                                label(for="CommandPending") Command Pending

                    .title Quality Codes

                    table#qualityCodesList.linedTable
                        thead
                            th.col-sm-4
                            th.col-sm-2
                            th.col-sm-3
                        tbody(data-bind="foreach: qualityCodes")
                            tr
                                td(data-bind="text: $data['Quality Code Label']")
                                td.clickToEdit(data-bind="clickEdit: $data['Quality Code']")
                                    span(data-bind="text: $data['Quality Code']")
                                    input.hide.form-control(type="text", maxlength="2", data-bind="value: $data['Quality Code']")
                                td
                                    div
                                        div(data-usedropdown="true", data-insertpalette="true", data-bind="diColorpicker: $data['Quality Code Font HTML Color']")

            // ------ Telemetry -------------------------------------------------------------------------------------
            div#telemetry(data-bind="visible: section() == 'Telemetry'")
                .title Telemetry

                form#telemetryForm(data-bind="with: telemetryViewModel")
                    table#telemetryList.linedTable
                        tbody
                            tr
                                td APDU Timeout (seconds)
                                td.clickToEdit(data-bind="clickEdit: $data['APDU Timeout']")
                                    span(data-bind="text: $data['APDU Timeout']")
                                    input#telemetryAPDUTimeout.hide.form-control(type="text", data-bind="value: $data['APDU Timeout']")
                            tr
                                td APDU Retries
                                td.clickToEdit(data-bind="clickEdit: $data['APDU Retries']")
                                    span(data-bind="text: $data['APDU Retries']")
                                    input#telemetryAPDURetries.hide.form-control(type="text", data-bind="value: $data['APDU Retries']")
                            tr
                                td Time Zone
                                td.clickToEdit(data-bind="clickEdit: $data['Time Zone']")
                                    span(data-bind="text: selectedTimeZoneText")
                                    select#telemetryTimeZone.hide.form-control(type="text", data-bind="event:{blur:changeTimezone},options: timeZones(), optionsText: 'name', optionsValue: 'value', value:selectedTimeZone")
                            //-Hiding Public IP Address per LMH. This property is expected to be completely removed in the near future
                            //-tr
                                td Public IP Address
                                td.clickToEdit(data-bind="clickEdit: $data['Public IP']")
                                    span(data-bind="text: $data['Public IP']")
                                    input#telemetryPublicIP.hide.form-control.input-sm(type="text", data-bind="value: $data['Public IP']")
                    br
                    .title Network Configuration
                    table#networkConfigTable.linedTable
                        thead
                            tr
                                th Make Default
                                th
                                th Network Segment
                                th IP Port
                        tbody(data-bind='foreach:networks')
                            tr
                                td
                                    input(type='radio', name='defaultNetwork', data-bind='checked:$parent.systemDefault, checkedValue:$data["IP Network Segment"], enable: ($data["IP Network Segment"]() !== 0 && $data["IP Port"]() >= 47808 && $data["IP Port"]() <= 47823 ), event:{click:$parent.changeDefault}')
                                td.networkDelete
                                    span(class="showOnHover valign pull-left" data-bind="visible: !$data.isDefault()")
                                        a(href="#", title="Delete", data-bind="click: $parent.removeNetwork")
                                            img(src="/img/icon_delete.png")
                                td.clickToEdit(data-bind="clickEdit: $data['IP Network Segment'], event:{click:$parent.setSegment}")
                                    span(data-bind="text: $data['IP Network Segment']")
                                    input#telemetryIPNetworkSegment.hide.form-control(type="text", data-bind="value: $data['IP Network Segment'], event:{blur:$parent.checkUniqueSegment}")
                                td.clickToEdit(data-bind="clickEdit: $data['IP Port']")
                                    span(data-bind="text: $data['IP Port']")
                                    input#telemetryIPNetworkSegment.hide.form-control(type="text", data-bind="value: $data['IP Port']")
                    #telemetryActionBar
                        button(id='networkAdd', type='button', class='btn btn-primary btn-sm', data-bind='click: addNetwork') Add New

            // ------ Alarm Messages ---------------------------------------------------------------------
            div#alarmTemplateContainer(data-bind="visible: section() == 'Alarm Messages'")
                div(data-bind='with: alarmMessagesViewModel')
                    .title(data-bind="text: displayName")
                    br
                    .gettingDataSpinner(data-bind="css: { displayDiv: activeDataRequest(), hideDiv: !activeDataRequest()} ", title="Requesting Data")
                        i.fa.fa-spinner.fa-spin.fa-3x
                        span.spinnertext Getting Data
                    div.alarmMessagesData
                        table.table.table-striped.table-bordered.dataTablePlaceHolder
                        include ../alarmTemplate/templates.pug
                        include ../alarmTemplate/_confirm.pug
            // ------ Backup ----------------------------------------------------------------------------------------
            div#backupContainer(data-bind="visible: section() == 'Backup'")
                .title Backup
                br
                div#backupForm(data-bind="with: backupViewModel")
                    button(id='backup', type='button', class='btn btn-primary btn-sm', data-bind='click: startBackup') Backup Now
                    br
                    div#backupMessage(data-bind="text: backupMsg, visible: showBackupMsg")

            // ------ Weather ---------------------------------------------------------------------------------------
            div#weather(data-bind="visible: section() == 'Weather'")
                div(data-bind="with: weatherViewModel")
                    .title Weather
                    div.weatherPoints(data-bind="foreach: weatherPoints")
                        .weatherTitle(data-bind="text: $data.title")
                        .well.well-sm
                            .btn.btn-danger.btn-xs(data-bind="click: $parent.removePointRef, visible: $data.point() !== null")
                                i.fa.fa-fw.fa-times
                            .btn.btn-info.btn-xs(data-bind="click: $parent.editPointRef")
                                i.fa.fa-fw.fa-pencil(data-bind="visible: $data.point() !== null")
                                i.fa.fa-fw.fa-plus(data-bind="visible: $data.point() === null")
                            // ko if: $data.point() !== null
                            a(data-bind="text: $data.point().Name, click: $parent.openPointRef")
                            // /ko


            // ------ About -----------------------------------------------------------------------------------------
            div#preferences(data-bind="visible: section() == 'Preferences'")
                div(data-bind="with: preferencesViewModel")
                    .title Preferences
                    .preferencesContainer
                        table#preferencesList.linedTable
                            tbody
                                tr
                                    td.col-sm-4 Server Processes Version
                                    td.col-sm-9(data-bind="text: $data.processVer")
                                tr
                                    td.col-sm-4 InfoscanJS Version
                                    td.col-sm-9(data-bind="text: $data.ijsVer")
                                tr
                                    td.col-sm-4 Site Name
                                    td.col-sm-9.clickToEdit(data-bind="clickEdit: $data.siteName")
                                        span(data-bind="text: $data.siteName")
                                        input.hide.form-control.siteName(type="text", maxlength="60", data-bind="value: $data.siteName")
            // ------ Notifications ---------------------------------------------------------------------------------
            .notifications(data-bind="visible: section() == 'Notifications'")
                div(data-bind="with: notificationsViewModel.bindings")
                    .notificationHeader
                        .pull-right(data-bind="visible: isEditingPolicy()")
                            .dropdown
                                button.btn.btn-primary.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="true") Change Policy
                                    span.caret.caret-spaced
                                ul.dropdown-menu
                                    li(data-bind="foreach: policyList")
                                        a(href="#", data-bind="text: name, click: $parent.selectPolicy")

                        h2(data-bind="visible: !isEditingPolicy()") Notification Control Center
                        h2(data-bind="visible: isEditingPolicy()") #[a(href="#", data-bind="click: home") Notify Policies] #[i.fa.fa-caret-right] #[span(data-bind="text: currPolicy.name")]

                    .notificationsContent
                        .policySelect(data-bind="visible: !isEditingPolicy()")
                            ul.nav.nav-tabs.nav-tabs-arrow
                                li.active
                                    a(href="#notifyPolicies") Notify Policies
                                //- li
                                //-     a(href="#notificationsActivity") Activity

                            .tab-content
                                #notifyPolicies.tab-pane.active
                                    .pull-right
                                        .button.btn.btn-success(data-bind="click: addPolicy") New Policy
                                    h3 Notify Policies

                                    .policyList(data-bind="foreach: policyList")
                                        .policy.row
                                            .col-xs-3
                                                a(href="#", data-bind="click: $parent.selectPolicy, text: name")
                                            .col-xs-3 Members: #[span(data-bind="text: members().length")]
                                            .col-xs-1.pull-right
                                                a(href="#", data-bind="click: $parent.deletePolicy")
                                                    i.fa.fa-times.deleteIcon
                                    .newPolicy(data-bind="visible: isEditingNewPolicy")
                                        .policy.row
                                            .col-xs-4
                                                input(type="text", data-bind="value: newPolicyName")
                                            .col-xs-8
                                                btn.btn.btn-sm.btn-success(data-bind="click: doAddNewPolicy") Save and Edit Policy

                                #notificationsActivity.tab-pane
                                    h3 Activity

                        .policyEdit(data-bind="visible: isEditingPolicy()")
                            ul.nav.nav-tabs.nav-tabs-arrow
                                li.active
                                    a(href="#policyGeneral") General
                                li
                                    a(href="#policyMembers") Members
                                li
                                    a(href="#policyAlertConfig") Alert Configurations
                                li
                                    a(href="#policySchedule") Schedule
                                //- li
                                //-     a(href="#policyCalendar") Calendar
                                //- li
                                //-     a(href="#policyActivity") Activity

                            .tab-content(data-bind="with: currPolicy")
                                #policyGeneral.tab-pane.active
                                    h3 General

                                    .policyList
                                        .policy.row
                                            .col-xs-3 Policy Name
                                            .col-xs-9.policyName(data-bind="css : {editingRow: $parent.isEditingPolicyName}")
                                                span.inputRow
                                                    span(data-bind="text: name")
                                                    a(href="#", data-bind="click: $parent.editPolicyName").pull-right.editPolicy
                                                        i.fa.fa-pencil-square-o
                                                span.editRow
                                                    input.form-control.input-sm(type="text", data-bind="value: $parent.currPolicyName")
                                                    span.pull-right
                                                        button.btn.btn-sm.btn-link(data-bind="click: $parent.cancelPolicyNameEdit") Cancel
                                                        button.btn.btn-sm.btn-success(data-bind="click: $parent.savePolicyName") Save
                                        .policy.row
                                            .col-xs-3 Notification Control
                                            .col-xs-9.policyEnabled(data-bind="css : {editingRow: $parent.isEditingPolicyEnabled}")
                                                span.inputRow Notifications are #[span(data-bind="text: enabled() === true ? 'Enabled' : 'Disabled'")]
                                                    a(href="#", data-bind="click: $parent.editPolicyEnabled").pull-right.editPolicy
                                                        i.fa.fa-pencil-square-o
                                                span.editRow
                                                    input.centered(type="checkbox", data-bind="checked: !$parent.currPolicyEnabled")
                                                    span Disable
                                                    span.pull-right
                                                        button.btn.btn-sm.btn-link(data-bind="click: $parent.cancelPolicyEnabledEdit") Cancel
                                                        button.btn.btn-sm.btn-success(data-bind="click: $parent.savePolicyEnabled") Save

                                        //- Hide until we implement throttle control
                                        //- .policy.row
                                            .col-xs-3 Throttle Control
                                            .col-xs-9 ????????
                                                a(href="#").pull-right.editPolicy
                                                    i.fa.fa-pencil-square-o

                                #policyMembers.tab-pane
                                    div(data-bind="visible: !$parent.isEditingMember()")
                                        h3 Members
                                            //- span.dropdown
                                            //-     button.btn.btn-sm.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="true") Send all members a test message
                                            //-         span.caret.caret-spaced
                                            //-     ul.dropdown-menu
                                            //-         li
                                            //-             a(href="#") Email
                                            //-             a(href="#") Text Mobile
                                            //-             a(href="#") Call Mobile
                                            //-             a(href="#") Call Home
                                            //-             a(href="#") Call Work

                                        .memberList
                                            table#memberList.display.table.table-striped(style="width: 100%")
                                            .col-xs-12
                                                button.btn.btn-sm.btn-default(data-bind="click: $parent.editPolicyMembers") Edit Members

                                    div(data-bind="visible: $parent.isEditingMember(), with: $parent.currMember")
                                        a.exitConfig(href="#", data-bind="click: $parents[1].cancelEditMember")
                                            i.fa.fa-chevron-left
                                            span View All

                                        .nameHeader
                                            i.fa.fa-user
                                            span.memberName(data-bind="text: firstName() + ' ' + lastName()")

                                        ul.nav.nav-tabs.nav-tabs-arrow
                                            li.active
                                                a(href="#memberNotifySettings") Notify Settings

                                        .tab-content
                                            #memberNotifySettings.tab-pane.active(data-bind="css: { editing: $parents[1].isEditingAlertNotifications()}")
                                                .pull-right
                                                    .button.btn.btn-sm.btn-default(data-bind="visible: !$parents[1].isEditingAlertNotifications(), click: $parents[1].editAlertNotifications") Edit
                                                    .button.btn.btn-sm.btn-text(data-bind="visible: $parents[1].isEditingAlertNotifications(), click: $parents[1].cancelEditAlertNotifications") Cancel
                                                    .button.btn.btn-sm.btn-success(data-bind="visible: $parents[1].isEditingAlertNotifications(), click: $parents[1].saveAlertNotifications") Save
                                                h3 Alert Notifications

                                                .notificationsEnabled Notifications are #[span.editable(data-bind="text: notificationsEnabled() ? 'Enabled' : 'Disabled'")] #[span.editableInput #[label(for="notificationsEnabled", data-bind="text: notificationsEnabled() ? 'Enabled' : 'Disabled'")] #[input#notificationsEnabled.checkbox-valign(type="checkbox", data-bind="checked: notificationsEnabled")]]

                                                // ko template: { name: 'notificationTableTpl', data: {alerts: alerts.Normal, name: 'Normal'}}
                                                // /ko

                                                // ko template: { name: 'notificationTableTpl', data: {alerts: alerts.Emergency, name: 'Emergency'}}
                                                // /ko

                                                // ko template: { name: 'notificationTableTpl', data: {alerts: alerts.Critical, name: 'Critical'}}
                                                // /ko

                                                // ko template: { name: 'notificationTableTpl', data: {alerts: alerts.Urgent, name: 'Urgent'}}
                                                // /ko

                                                h3 Options
                                                .notificationTable
                                                    .notificationRow
                                                        .checkbox
                                                            label
                                                                input.checkbox-valign(type="checkbox", data-bind="disable: !$parents[1].isEditingAlertNotifications(), checked: notificationOptions.Emergency")
                                                                |Use different notify settings for Emergency alarms
                                                    .notificationRow
                                                        .checkbox
                                                            label
                                                                input.checkbox-valign(type="checkbox", data-bind="disable: !$parents[1].isEditingAlertNotifications(), checked: notificationOptions.Critical")
                                                                |Use different notify settings for Critical alarms
                                                    .notificationRow
                                                        .checkbox
                                                            label
                                                                input.checkbox-valign(type="checkbox", data-bind="disable: !$parents[1].isEditingAlertNotifications(), checked: notificationOptions.Urgent")
                                                                |Use different notify settings for Urgent alarms
                                                    .notificationRow
                                                        .checkbox
                                                            label
                                                                input.checkbox-valign(type="checkbox", data-bind="disable: !$parents[1].isEditingAlertNotifications(), checked: notificationOptions.notifyOnAck")
                                                                |Notify me when someone else acknowledges an alarm that I have been alerted about

                                #policyAlertConfig.tab-pane
                                    div(data-bind="visible: $parent.currAlertConfig() === null")
                                        .pull-right
                                            .button.btn.btn-success(data-bind="click: $parent.addConfiguration") New Configuration
                                        h3 Alert Configurations

                                        .policyList(data-bind="foreach: alertConfigs")
                                            .policy.row
                                                .col-xs-6
                                                    a(href="#", data-bind="text: name, click: $parents[1].editAlertConfig")
                                                .col-xs-6.policyToolbar
                                                    //- a(href="#")
                                                    //-     i.fa.fa-pencil-square-o
                                                    //- a(href="#")
                                                    //-     i.fa.fa-files-o
                                                    a(href="#", data-bind="click: $parents[1].deleteAlertConfig")
                                                        i.fa.fa-times.deleteIcon
                                        .newConfiguration(data-bind="visible: $parent.isEditingNewConfiguration")
                                            .policy.row
                                                .col-xs-3
                                                    input(type="text", data-bind="value: $parent.newConfigurationName")
                                                .col-xs-9
                                                    btn.btn.btn-sm.btn-success(data-bind="click: $parent.doAddNewConfiguration") Save and Edit Configuration


                                    div(data-bind="css: { editing: $parent.isEditingAlertConfig() }, visible: $parent.currAlertConfig() !== null, with: $parent.currAlertConfig")
                                        a.exitConfig(href="#", data-bind="click: $parents[1].cancelEditAlertConfig")
                                            i.fa.fa-chevron-left
                                            span View All
                                        .pull-right
                                            .button.btn.btn-sm.btn-default(data-bind="visible: !$parents[1].isEditingAlertConfig(), click: $parents[1].doEditAlertConfig") Edit
                                            .button.btn.btn-sm.btn-text(data-bind="visible: $parents[1].isEditingAlertConfig(), click: $parents[1].cancelDoEditAlertConfig") Cancel
                                            .button.btn.btn-sm.btn-success(data-bind="visible: $parents[1].isEditingAlertConfig(), click: $parents[1].saveEditAlertConfig") Save
                                        h3.editable(data-bind="text: name")
                                        h3.editRow
                                            input.alertConfigName.editRow(type="text", data-bind="value: name")
                                        .checkbox.isOnCall
                                            label
                                                input.checkbox-valign(type="checkbox", data-bind="checked: isOnCall, disable: !$parents[1].isEditingAlertConfig()")
                                                |This configuration is used for On-Call

                                        .rotateGroups(data-bind="visible: groups().length > 1, with: rotateConfig")
                                            span #[i.fa.fa-repeat] Rotate the active group every #[span.editable(data-bind="text: scale")]  #[input.input-xs.form-control.input-sm.editableInput(type="text", data-bind="value: scale")] week at #[span.editable(data-bind="text: $parents[2].convertTime(time)")] #[input.timeInput.form-control.input-sm.editableInput(data-bind="timepicker: time")] on #[span.editable(data-bind="text: day")] #[select.form-control.input-sm.select-sm.editableInput(data-bind="value: day, options: $parents[2].days")]

                                        div(data-bind="")
                                            // ko foreach: groups
                                            .alertGroup
                                                .groupTitle
                                                    .pull-right.editableInput
                                                        a(href="#", data-bind="click: function () { $parents[2].deleteAlertGroup($parent, $index); }")
                                                            i.fa.fa-times.deleteIcon
                                                    i.fa.fa-bars
                                                    span.groupName(data-bind="text: name, visible: !$parents[2].isEditingAlertConfig()")
                                                    input.groupName.input-sm.form-control(type="text", data-bind="value: name, visible: $parents[2].isEditingAlertConfig()")
                                                .alertSection
                                                    .alertBody
                                                        .col
                                                            .sectionIcon
                                                                i.fa.fa-bell-o
                                                            .sectionTitle #[span.editable(data-bind="text: alertDelay")] #[input.input-xs.form-control.input-sm.editableInput(data-bind="value: alertDelay")] minute(s) after an alarm occurs

                                                div(data-bind="foreach: escalations")
                                                    .alertSection
                                                        .alertBody
                                                            .leftCol.col
                                                                .sectionIcon
                                                                    i.fa.fa-male
                                                                .sectionTitle Alert:
                                                                .rotationList(data-bind="sortable: { data: members, isEnabled: $parents[3].isEditingAlertConfig }")
                                                                    .member
                                                                        span(data-bind="text: $parents[4].getUserName($data)")
                                                                button.editableInput.btn.btn-sm.btn-xs.btn-default.manageAlertConfigMembers(data-bind="click: $parents[3].editAlertConfigMembers") Manage Members
                                                            .rightCol.col
                                                                .pull-right.editableInput
                                                                    a(href="#", data-bind="click: function () { $parents[3].deleteEscalation($parent, $index); }")
                                                                        i.fa.fa-times.deleteIcon
                                                                .sectionTitle.sectionTitleNoIcon
                                                                    span.alertStyle Alert Style:
                                                                    span.editable(data-bind="text: $parents[3].getAlertStyleText(alertStyle())")
                                                                    select.form-control.input-sm.select-sm.editableInput(data-bind="value: alertStyle, options: $parents[3].alertStyles, optionsText: 'text', optionsValue: 'value'")
                                                                .sectionWait(data-bind="visible: alertStyle() === 'Sequenced'")
                                                                    i.fa.fa-clock-o
                                                                    span Wait #[span.editable(data-bind="text: memberAlertDelay")] #[input.input-xs.form-control.input-sm.editableInput(data-bind="value: memberAlertDelay")] minutes before alerting the next person in the list
                                                                .sectionRotate.sectionMultiline(data-bind="visible: alertStyle() === 'FirstResponder' || alertStyle() === 'Sequenced'")
                                                                    i.fa.fa-repeat
                                                                    .checkbox(data-bind="with: rotateConfig")
                                                                        label
                                                                            input.checkbox-valign(type="checkbox", data-bind="checked: enabled, disable: !$parents[4].isEditingAlertConfig()")
                                                                            div Rotate the first responder
                                                                            div(data-bind="visible: enabled") Every #[span.editable(data-bind="text: scale")]  #[input.input-xs.form-control.input-sm.editableInput(type="text", data-bind="value: scale")] week at #[span.editable(data-bind="text: $parents[4].convertTime(time)")] #[input.timeInput.form-control.input-sm.editableInput(data-bind="timepicker: time")] on #[span.editable(data-bind="text: day")] #[select.form-control.input-sm.select-sm.editableInput(data-bind="value: day, options: $parents[4].days")]
                                                                .sectionRepeat.sectionMultiline
                                                                    i.fa.fa-history
                                                                    .checkbox(data-bind="with: repeatConfig")
                                                                        label
                                                                            input.checkbox-valign(type="checkbox", data-bind="checked: enabled, disable: !$parents[4].isEditingAlertConfig()")
                                                                            div If not acknowledged, repeat this alert #[span(data-bind="visible: enabled") #[span.editable(data-bind="text: repeatCount")] #[input.form-control.input-sm.input-xs.editableInput(data-bind="value: repeatCount")] times.  Wait #[span.editable(data-bind="text: $parent.memberAlertDelay")] #[input.form-control.input-sm.input-xs.editableInput(data-bind="value: $parent.memberAlertDelay")] minutes after the previous alert completes.]

                                                        .alertFooter
                                                            .escalationTimer
                                                                i.fa.fa-arrow-down
                                                                | Escalates after #[span.editable(data-bind="text: escalationDelay")] #[input.form-control.input-sm.input-xs.editableInput(data-bind="value: escalationDelay")] minutes

                                                .alertSection.addEscalation.alert-no-arrow(data-bind="visible: $parents[2].isEditingAlertConfig()")
                                                    a.addGroup.clearFix.centerFlex(href="#",data-bind="click: $parents[2].addEscalation")
                                                        i.fa.fa-plus-circle.text-success
                                                        span Add escalation

                                                .alertSection.alert-no-arrow
                                                    .alertBody.centerFlex
                                                        .col-xs-1
                                                            i.fa.fa-history
                                                        .col-xs-11
                                                            .checkbox(data-bind="with: repeatConfig")
                                                                label
                                                                    input.checkbox-valign(type="checkbox", data-bind="checked: enabled")
                                                                    div.inputRow If not acknowledged repeat this alert #[span.editable(data-bind="text: repeatCount() === 0 ? 'indefinitely' : repeatCount() + ' times'")]
                                                                    div.editRow If not acknowledged, repeat this alert #[input.input-sm.form-control.input-xs.editableInput(data-bind="value: repeatCount")] times.  (Use 0 for indefinite repeats)

                                            // /ko

                                            .alertGroup.addAlertGroup(data-bind="visible: $parents[1].isEditingAlertConfig()")
                                                a.addGroup.clearfix(href="#", data-bind="click: $parents[1].addAlertGroup")
                                                    .col-xs-1
                                                        i.text-success.fa.fa-plus-circle
                                                    .col-xs-11
                                                        .addGroupTitle Add Group
                                                        .addGroupBody Only one group is active at a time.  If two or more groups are added, the active group is rotated in based on the group rotation settings at the top of this page.

                                #policySchedule.tab-pane(data-bind="css: { editing: $parent.isEditingSchedule }")
                                    .pull-right
                                        .button.editable.btn.btn-sm.btn-default(data-bind="click: $parent.editSchedule") Edit Schedule
                                        .button.editableInput.btn.btn-sm.btn-text(data-bind="click: $parent.cancelEditSchedule") Cancel
                                        .button.editableInput.btn.btn-sm.btn-success(data-bind="click: $parent.saveSchedule") Save
                                    h3 Schedule

                                    .scheduleLayers(data-bind="foreach: scheduleLayers")
                                        .panel.panel-default.scheduleLayer
                                            .panel-heading
                                                .pull-right.editableInput
                                                    a(href="#", data-bind="click: function () { $parents[1].deleteScheduleLayer($parent, $index); }")
                                                        i.fa.fa-times.deleteIcon
                                                h3.panel-title(data-bind="text: 'Layer ' + (parseInt($index()) + 1)")
                                            .panel-body
                                                .col-xs-4
                                                    div Alert Configurations
                                                    .rotationList(data-bind="foreach: alertConfigs")
                                                        .member(data-bind="alertConfigName: $data")
                                                    span.dropdown.addAlertConfig.editRow
                                                        button.btn.btn-sm.btn-default(data-toggle="dropdown") Add Alert Config
                                                            span.caret
                                                        ul.dropdown-menu(data-bind="foreach: $parent.alertConfigs")
                                                            li(data-bind="visible: $parent.alertConfigs.indexOf(id()) === -1")
                                                                a(href="#", data-bind="text: name, click: function () { $parents[2].addAlertConfig($context); }")

                                                .col-xs-8
                                                    div Schedule:
                                                    .scheduleList(data-bind="foreach: schedules")
                                                        .schedule.inputRow
                                                            span.editable(data-bind="text: $parents[2].convertDate($data.days)")
                                                            span(data-bind="visible: !allDay()")
                                                                span.editable From
                                                                span(data-bind="text: $parents[2].convertTime($data.startTime)")
                                                                span.editable To
                                                                span(data-bind="text: $parents[2].convertTime($data.endTime)")
                                                            span(data-bind="visible: allDay()") All Day
                                                        .schedule.editRow
                                                            span
                                                                button.btn.btn-sm.btn-xs.btn-default(data-bind="text: $parents[2].convertDate(days), click: $parents[2].editDays")
                                                            //- span.dropdown
                                                            //-     button.btn.btn-default(data-toggle="dropdown")
                                                            //-         span(data-bind="text: $parents[2].convertDate(days)")
                                                            //-         span.caret
                                                            //-     ul.dropdown-menu.daySelect
                                                            //-         li
                                                            //-             input(type="checkbox", data-bind="checked: days.indexOf('mon') !== -1")
                                                            //-             span Monday
                                                            //-         li
                                                            //-             input(type="checkbox", data-bind="checked: days.indexOf('tues') !== -1")
                                                            //-             span Tuesday
                                                            //-         li
                                                            //-             input(type="checkbox", data-bind="checked: days.indexOf('wed') !== -1")
                                                            //-             span Wednesday
                                                            //-         li
                                                            //-             input(type="checkbox", data-bind="checked: days.indexOf('thur') !== -1")
                                                            //-             span Thursday
                                                            //-         li
                                                            //-             input(type="checkbox", data-bind="checked: days.indexOf('fri') !== -1")
                                                            //-             span Friday
                                                            //-         li
                                                            //-             input(type="checkbox", data-bind="checked: days.indexOf('sat') !== -1")
                                                            //-             span Saturday
                                                            //-         li
                                                            //-             input(type="checkbox", data-bind="checked: days.indexOf('sun') !== -1")
                                                            //-             span Sunday
                                                            //-         li
                                                            //-             input(type="checkbox", data-bind="checked: holidays")
                                                            //-             span Holidays
                                                            span(data-bind="visible: !allDay()")
                                                                span From
                                                                //- data-bind="value: $parents[2].convertTime($data.startTime)")
                                                                input.input-sm.form-control(type="text", data-bind="timepicker: startTime")
                                                                span To
                                                                input.input-sm.form-control(type="text", data-bind="timepicker: endTime")
                                                            input.checkbox-valign(type="checkbox", data-bind="checked: allDay, click: $parents[2].updateScheduleEvents")
                                                            span All Day
                                                            a(href="#", data-bind="click: function () { $parents[2].deleteSchedule($context); }")
                                                                i.fa.fa-times.deleteIcon
                                                    button.editableInput.btn.btn-sm.btn-xs.btn-default(data-bind="click: $parents[1].addSchedule") Add Schedule
                                    btn.btn-sm.btn-xs.btn-success.editableInput(data-bind="click: $parent.addScheduleLayer") Add Schedule Layer

                                    //- calendar
                                    h3.noGap Schedule Preview

                                    #scheduleCalendar


                                #policyCalendar.tab-pane
                                    h3 Calendar

                                    .panel.panel-default
                                        .panel-heading
                                            h3.panel-title Legend
                                        .panel-body
                                            .legendEntry Normal Business Hours, 8A-5P

                                    #calendarDisplay

                                    .panel.panel-default
                                        .panel-heading
                                            h3.panel-title Current Rotation
                                        .panel-body
                                            .bodyHeading Off Hours
                                            .smallRow
                                                span.dropdown
                                                    button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="true") Adam Eldridge (first responder)
                                                        span.caret.caret-spaced
                                                    ul.dropdown-menu
                                                        li
                                                            a(href="#") Adam Eldridge
                                                            a(href="#") Johnny Roberts
                                                            a(href="#") Stephen Trent

                                                span.dropdown
                                                    button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="true") Perry Lyon
                                                        span.caret.caret-spaced
                                                    ul.dropdown-menu
                                                        li
                                                            a(href="#") Fred Trivette

                                            .bodyHeading Normal Business Hours
                                            .smallRow
                                                span.rowTitle Active Group
                                                span.dropdown
                                                    button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="true") Group 1
                                                        span.caret.caret-spaced
                                                    ul.dropdown-menu
                                                        li
                                                            a(href="#") Group 1
                                                            a(href="#") Group 2

        #notificationsEditMemberModal.notifications.modal.fade(data-bind="with: notificationsViewModel.bindings")
            .modal-dialog.modal-sm
                .modal-content
                    .modal-header
                        h4.modal-title Manage Members
                    .modal-body.clearfix.form
                        //- .col-xs-12
                        //-     .row
                        //-         .col-xs-3.centerText Member
                        .col-xs-12.primaryMemberList(data-bind="foreach: primaryMemberList")
                            .row
                                .col-xs-12
                                    .checkbox.noMargin
                                        label
                                            input.checkbox-valign(type="checkbox", data-bind="checked: selected")
                                            span.primaryMember(data-bind="text: firstName + ' ' + lastName")

                        .col-xs-6.secondaryMemberList
                    .modal-footer
                        button.btn.btn-default.btn-sm(data-dismiss="modal") Cancel
                        button.btn.btn-success.btn-sm(data-bind="click: updateMembers") Update

        #notificationsEditDaysModal.notifications.modal.fade(data-bind="with: notificationsViewModel.bindings")
            .modal-dialog.modal-sm
                .modal-content
                    .modal-header
                        h4.modal-title Manage Days
                    .modal-body.clearfix.form
                        div
                            input#dayMonday(type="checkbox", data-bind="checked: dayMonday")
                            label(for="dayMonday") Monday
                        div
                            input#dayTuesday(type="checkbox", data-bind="checked: dayTuesday")
                            label(for="dayTuesday") Tuesday
                        div
                            input#dayWednesday(type="checkbox", data-bind="checked: dayWednesday")
                            label(for="dayWednesday") Wednesday
                        div
                            input#dayThursday(type="checkbox", data-bind="checked: dayThursday")
                            label(for="dayThursday") Thursday
                        div
                            input#dayFriday(type="checkbox", data-bind="checked: dayFriday")
                            label(for="dayFriday") Friday
                        div
                            input#daySaturday(type="checkbox", data-bind="checked: daySaturday")
                            label(for="daySaturday") Saturday
                        div
                            input#daySunday(type="checkbox", data-bind="checked: daySunday")
                            label(for="daySunday") Sunday
                        div
                            input#dayHolidays(type="checkbox", data-bind="checked: dayHolidays")
                            label(for="dayHolidays") Holidays
                    .modal-footer
                        button.btn.btn-default.btn-sm(data-dismiss="modal") Cancel
                        button.btn.btn-success.btn-sm(data-bind="click: updateDays") Update

        script#notificationTableTpl(type="text/html")
            .notificationTableContainer(data-bind="visible: $parent.notificationOptions[name] || name === 'Normal'")
                .notificationRowHeader.alternativeNotification(data-bind="visible: name !== 'Normal', text: name" )
                .notificationTable(data-bind="foreach: alerts")
                    .notificationRow
                        .notificationIcon.smsIcon
                            .fa-stack
                                i.fa.fa-stack-2x(data-bind="css: $parents[3].getAlertIcon($data)")
                                i.fa.fa-stack-1x.fa-stack-text
                        .notificationAlert
                            div
                                span.editable(data-bind="text: delay")
                                input.form-control.input-sm.input-xs.editableInput(data-bind="disable: $index() === 0, value: delay")
                                span minute(s) after I receive an alert
                                span.editable(data-bind="text: $parents[3].getContactAlertString($data)")
                                select.editableInput(data-bind="value: Name, options: $parents[1].contactInfo, optionsText: function (item) {return $parents[3].getContactString(item);}, optionsValue: function (item) { return item.Name(); } ")
                        span.pull-right.editableInput
                            a(href="#", data-bind="click: function () { $parents[3].deleteAlert($parent, $index); }")
                                i.fa.fa-times.deleteIcon

                button.btn.btn-sm.btn-xs.btn-success(data-bind="visible: $parents[2].isEditingAlertNotifications, click: $parents[2].addNewAlert") Add New Alert

                        //- a.notificationEdit.pull-right(href="#")
                        //-     i.fa.fa-pencil-square-o
