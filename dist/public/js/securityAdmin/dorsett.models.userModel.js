dorsett.models=dorsett.models||{},dorsett.models.mappings=dorsett.models.mappings||{},dorsett.models.userModel=function(a){var b,c=ko.utils.parseJson(ko.toJSON(a)),d={_id:null,username:"",Password:"","Password Reset":!1,"Last Login Time":null,"Last Activity Time":null,"Auto Logout Duration":0,"First Name":"","Last Name":"","System Admin":!1,"Session Length":0,Photo:"",Title:"","Contact Info":[]};b=$.extend(d,c),ko.mapping.fromJS(b,dorsett.models.mappings.User,this)},dorsett.models.contactInfoModel=function(a){var b,c={Type:"",Value:"",Name:""};b=$.extend(c,a),ko.mapping.fromJS(b,dorsett.models.mappings.ContactInfo,this)},dorsett.models.mappings.User={copy:["_id"],key:function(a){return a._id},"First Name":{create:function(a){return ko.observable(a.data).extend({required:{message:" *required field"}})}},"Last Name":{create:function(a){return ko.observable(a.data).extend({required:{message:" *required field"}})}},"Last Login Time":{create:function(a){var b=new Date(0);return a.data?(b.setUTCSeconds(a.data),moment(b).calendar()):"Never"}},"Last Activity Time":{create:function(a){var b=new Date(0);return a.data?(b.setUTCSeconds(a.data),moment(b).calendar()):"None"}},Title:{create:function(a){return ko.observable(a.data).extend({required:{message:" *required field"}})}},username:{create:function(a){return console.log("id",a.parent._id),ko.observable(a.data).extend({required:{message:" *required field"},validation:{validator:function(b){return!ko.utils.arrayFirst(dorsett.userData.allData(),function(c){return c._id!=a.parent._id&&c.username.toLowerCase()==b.toLowerCase()})},message:"*already exists"}})}},Password:{create:function(a){return ko.observable("").extend({required:{onlyIf:function(){return!a.parent._id},message:"Password is required. Click the button below to set the password."}})}},"Contact Info":{create:function(a){return new dorsett.models.contactInfoModel(a.data)}}},dorsett.models.mappings.ContactInfo={copy:["username","Last Login Time","Last Activity Time","Auto Logout Duration"],Type:{create:function(a){return ko.observable(a.data)}},Name:{create:function(a){return ko.observable(a.data)}},Value:{create:function(a){var b=0,c=dorsett.contactValidationMap.length;for(b;b<c;b++)if(dorsett.contactValidationMap[b].type==a.parent.Type())return ko.observable(a.data).extend(dorsett.contactValidationMap[b].val);return ko.observable(a.data)}}};