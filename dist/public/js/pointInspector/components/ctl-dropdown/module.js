define(["knockout","text!./view.html"],function(a,b){function c(a){this.root=a.rootContext,this.columnClasses=a.columnClasses,this.labelClasses=a.hasOwnProperty("labelClasses")?a.labelClasses:"lh30",this.propertyName=a.propertyName,this.showLabel=!a.hasOwnProperty("showLabel")||a.showLabel,this.data=a.data[this.propertyName],this.enumSetName=a.enumSetName,this.utility=a.rootContext.utility,this.isInEditMode=a.rootContext.isInEditMode}var d;return a.bindingHandlers.enumTextValue={init:function(b,c,e){var f=$(b),g=(a.contextFor(b),e()),h=a.utils.unwrapObservable(g.options),i=(g.value,c());d=g.value.subscribe(function(b){for(var c=0;c<h.length;c++)h[c].badProperty&&(h.splice(c,1),c--);var d=a.utils.arrayFirst(h,function(c,d){return a.unwrap(c.value)==b});!!d&&i(a.unwrap(d.name)),console.log("CHANGE VALUE",i()),$(document).triggerHandler({type:"viewmodelChange",targetElement:f,property:g.propertyName,refPoint:null})})}},c.prototype.getOptions=function(){var b,c,d=this.data;if(b="function"==typeof d.ValueOptions?d.ValueOptions():this.utility.config.Utility.pointTypes.getEnums(this.enumSetName,this.propertyName),b||(b=this.root.point.data.Value.ValueOptions()),c=a.utils.arrayFirst(b,function(b){return a.unwrap(b.value)==d.eValue()}))for(var e=0;e<b.length;e++)a.isObservable(b[0].name)&&d.eValue()===b[e].value()&&d.Value(b[e].name());else b.unshift({name:d.Value(),value:d.eValue(),badProperty:!0});return b},c.prototype.dispose=function(){d.dispose()},{viewModel:c,template:b}});