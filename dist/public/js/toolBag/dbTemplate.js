function buildView(){var a,b,c,d,e=$(".nav-tabs"),f=$(".tab-content"),g=myViewModel.points().length;for(a=0;a<g;a++)b=myViewModel.points()[a],d=conTemplate.replace(new RegExp("{i}","g"),a).replace(new RegExp("{pointType}","g"),b.pointType).replace(new RegExp("{_pointType}","g"),b._pointType),f.append(d),c=navTemplate.replace(new RegExp("{i}","g"),a).replace(new RegExp("{pointType}","g"),b.pointType).replace(new RegExp("{_pointType}","g"),b._pointType),e.append(c),$("#All").append("<br /><div data-bind='visible:points()["+a+"].n_prob() != \"(0)\"'><span style='font-weight:bold; font-size:larger'> "+b.pointType+"</span><div class='"+b._pointType+"'></div></div>"),5===a&&(e.append("<li class='dropdown'>                    <a href='#' class='dropdown-toggle' data-toggle='dropdown'>More <b class='caret'></b></a>                    <ul class='dropdown-menu' role='menu'>"),e=$(".dropdown-menu"));e.append("</ul>")}var resTemplate="<table class='table table-striped table-condensed' style='font-size:small; border-collapse:separate;'>                        <tbody data-bind='foreach: templateData'>                            <tr>                                <td width='400'>                                    <div>id: <span data-bind='text: _id'></span></div>                                    <div>Name: <span data-bind='text: Name'></span></div>                                </td>                                <td data-bind='foreach: Problems'>                                    <div data-bind='text: $data'></div>                                </td>                            </tr>                        </tbody>                    </table>",navTemplate="<li>                        <a href='#{_pointType}' data-toggle='tab'>{pointType}                            <span data-bind='text: points()[{i}].n_prob, visible: !points()[{i}].err() && !points()[{i}].busy()'></span>                            <i data-bind='visible: points()[{i}].busy', class='fa fa-spinner fa-spin'></i>                            <i data-bind='visible: points()[{i}].err',  class='fa fa-exclamation-circle', style='color:red;'></i>                        </a>                    </li>",conTemplate="<div class='tab-pane' id='{_pointType}'>                        <span style='font-weight:bold; font-size:larger'>{pointType}</span>                        <input type='button' data-bind='click: points()[{i}].checkProperties, disable: points()[{i}].busy', value='Check {pointType} Properties Now' style='float:right' class='btn btn-primary'>                        <br /><br />                        <div data-bind='visible: points()[{i}].err, text:points()[{i}].errMsg' style='color:red'></div>                        <div data-bind='visible: points()[{i}].n_prob() == \"(0)\"'>No problems found.</div>                        <div class='{_pointType}'></div>                    </div>",myViewModel,socket=io.connect(window.location.origin);socket.on("returnProperties",function(a){var b,c,d,e=0,f=myViewModel.points()[a.ndx],g={},h=$(resTemplate);for(console.log("data",a),g.templateData=[],b=0,c=a.results.length;b<c;b++)d=a.results[b],g.templateData.push({_id:d._id,Name:d.Name,Problems:d.Problems}),e+=d.Problems.length;ko.applyBindings(g,h[0]),$(a.domElement).html(h),f.n_prob("("+e+")"),f.busy(!1),f.err(a.err),f.errMsg(a.errMsg),$(".table").delegate("td","click",function(){$(this).closest("tr").hasClass("highlightedRow")===!0?$(this).closest("tr").removeClass("highlightedRow"):($(".table").find("tr.highlightedRow").removeClass("highlightedRow"),$(this).closest("tr").addClass("highlightedRow"))})}),myViewModel=function(){var a,b={},c=0;b.points=ko.observableArray();for(a in Config.Enums["Point Types"]){var d={};d.ndx=c,d.pointType=a,d._pointType=a.replace(" ","_"),d.domElement="."+d._pointType,d.busy=ko.observable(!1),d.err=ko.observable(!1),d.errMsg=ko.observable(),d.n_prob=ko.observable("(0)"),d.checkProperties=function(){var a=c;return function(){b.points()[a].err(!1),b.points()[a].busy(!0),ko.removeNode($(b.points()[a].domElement).children()),$(b.points()[a].domElement).empty(),socket.emit("checkPropertiesForOne",{ndx:b.points()[a].ndx,pointType:b.points()[a].pointType,_pointType:b.points()[a]._pointType,domElement:b.points()[a].domElement})}}(),b.points.push(d),c++}return b.All={},b.All.busy=ko.computed(function(){var a=0,c=!1,d=b.points().length;for(a=0;a<d&&(c=c||b.points()[a].busy(),c!==!0);a++);return c}),b.All.err=ko.computed(function(){var a=0,c=!1,d=b.points().length;for(a=0;a<d&&(c=c&&b.points()[a].err(),c!==!1);a++);return c}),b.All.n_prob=ko.computed(function(){var a=0,c=0,d=b.points().length;for(a=0;a<d;a++)void 0!==b.points()[a].n_prob()&&(c+=parseInt(b.points()[a].n_prob().replace("(","").replace(")",""),10));return"("+c+")"}),b.All.checkProperties=function(){var a=0,c=b.points().length;for(a=0;a<c;a++)b.points()[a].checkProperties()},b}(),$(function(){buildView(),ko.applyBindings(myViewModel)});